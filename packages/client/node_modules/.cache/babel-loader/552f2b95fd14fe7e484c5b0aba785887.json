{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Form, Input, Switch, Upload } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResidentForm = ({\n  form,\n  obj\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (obj) {\n      form.setFieldsValue(obj);\n    } else {\n      form.resetFields();\n    }\n  }, [obj]);\n\n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n\n    const isLt2M = file.size / 1024 / 1024 < 2;\n\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n\n    return isJpgOrPng && isLt2M;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    labelCol: {\n      flex: \"0 0 90px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"H\\xECnh \\u1EA3nh\",\n      name: \"image\",\n      children: /*#__PURE__*/_jsxDEV(Upload, {\n        name: \"avatar\",\n        listType: \"picture-card\",\n        className: \"avatar-uploader\",\n        showUploadList: false,\n        action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n        beforeUpload: beforeUpload,\n        onChange: this.handleChange,\n        children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"avatar\",\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }, this) : uploadButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"H\\u1ECD V\\xE0 T\\xEAn\",\n      name: \"ho_ten\",\n      rules: [{\n        required: true,\n        message: \"Please input name!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"SHSQ\",\n      name: \"shsq\",\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"\\u0110\\u1EA3ng\",\n      name: \"dang\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        defaultChecked: obj === null || obj === void 0 ? void 0 : obj.dang\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"\\u0110o\\xE0n vi\\xEAn\",\n      name: \"doan_vien\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        defaultChecked: obj === null || obj === void 0 ? void 0 : obj.doan_vien\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResidentForm, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ResidentForm;\nexport default ResidentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResidentForm\");","map":{"version":3,"sources":["/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/form.tsx"],"names":["React","useEffect","Form","Input","Switch","Upload","ResidentForm","form","obj","setFieldsValue","resetFields","beforeUpload","file","isJpgOrPng","type","message","error","isLt2M","size","flex","handleChange","imageUrl","width","uploadButton","required","dang","doan_vien"],"mappings":"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","sourcesContent":["import React, { FC, useEffect } from \"react\";\nimport { Form, Input, Select, Switch, Upload } from \"antd\";\nimport { FormInstance } from \"antd/es/form\";\nimport { Resident } from \"../../services/resident/model\";\n\nconst ResidentForm: FC<{ form: FormInstance; obj?: Resident }> = ({\n  form,\n  obj,\n}) => {\n  useEffect(() => {\n    if (obj) {\n      form.setFieldsValue(obj);\n    } else {\n      form.resetFields();\n    }\n  }, [obj]);\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!');\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!');\n    }\n    return isJpgOrPng && isLt2M;\n  }\n  \n\n  return (\n    <Form form={form} labelCol={{ flex: \"0 0 90px\" }}>\n      <Form.Item label=\"Hình ảnh\" name=\"image\">\n        <Upload\n          name=\"avatar\"\n          listType=\"picture-card\"\n          className=\"avatar-uploader\"\n          showUploadList={false}\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n          beforeUpload={beforeUpload}\n          onChange={this.handleChange}\n        >\n          {imageUrl ? <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} /> : uploadButton}\n        </Upload>\n      </Form.Item>\n      <Form.Item\n        label=\"Họ Và Tên\"\n        name=\"ho_ten\"\n        rules={[{ required: true, message: \"Please input name!\" }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"SHSQ\" name=\"shsq\">\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"Đảng\" name=\"dang\">\n        <Switch defaultChecked={obj?.dang}/>\n      </Form.Item>\n      <Form.Item label=\"Đoàn viên\" name=\"doan_vien\">\n        <Switch defaultChecked={obj?.doan_vien}/>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default ResidentForm;\n"]},"metadata":{},"sourceType":"module"}