{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Desktop/templateworkspace/packages/client/src/routes/router.tsx\";\nimport React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"../components/layout\";\nimport Loading from \"../components/ui/loading\";\nimport { routes } from \"./routes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const extractRoute = (all, route) => {\n  if (route.component) {\n    all.push(route);\n  } else if (route.children) {\n    route.children.reduce(extractRoute, all);\n  }\n\n  return all;\n};\n\nconst AppRoutes = () => {\n  const allRoutes = routes.reduce(extractRoute, []);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this),\n        children: [fullscreenRoutes.map(item => item.public ? /*#__PURE__*/_jsxDEV(Route, { ...item\n        }, item.path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(PrivateRoute, { ...item\n        }, item.path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)), allRoutes.map(item => /*#__PURE__*/_jsxDEV(Route, {\n          component: item.component,\n          path: item.path,\n          exact: item.exact\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AppRoutes;\nexport default AppRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRoutes\");","map":{"version":3,"sources":["/Users/abc/Desktop/templateworkspace/packages/client/src/routes/router.tsx"],"names":["React","Suspense","Route","Switch","Layout","Loading","routes","extractRoute","all","route","component","push","children","reduce","AppRoutes","allRoutes","fullscreenRoutes","map","item","public","path","exact","name"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,SAAoBC,MAApB,QAAkC,UAAlC;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,GAAD,EAAmBC,KAAnB,KAAwC;AAClE,MAAIA,KAAK,CAACC,SAAV,EAAqB;AACnBF,IAAAA,GAAG,CAACG,IAAJ,CAASF,KAAT;AACD,GAFD,MAEO,IAAIA,KAAK,CAACG,QAAV,EAAoB;AACzBH,IAAAA,KAAK,CAACG,QAAN,CAAeC,MAAf,CAAsBN,YAAtB,EAAoCC,GAApC;AACD;;AACD,SAAOA,GAAP;AACD,CAPM;;AASP,MAAMM,SAAa,GAAG,MAAM;AAC1B,QAAMC,SAAS,GAAGT,MAAM,CAACO,MAAP,CAA2BN,YAA3B,EAAyC,EAAzC,CAAlB;AAEA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,QAAQ,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAApB;AAAA,mBACCS,gBAAgB,CAACC,GAAjB,CAAsBC,IAAD,IACpBA,IAAI,CAACC,MAAL,gBACE,QAAC,KAAD,OAA2BD;AAA3B,WAAYA,IAAI,CAACE,IAAjB;AAAA;AAAA;AAAA;AAAA,gBADF,gBAGE,QAAC,YAAD,OAAkCF;AAAlC,WAAmBA,IAAI,CAACE,IAAxB;AAAA;AAAA;AAAA;AAAA,gBAJH,CADD,EAQGL,SAAS,CAACE,GAAV,CAAeC,IAAD,iBACb,QAAC,KAAD;AAEE,UAAA,SAAS,EAAEA,IAAI,CAACR,SAFlB;AAGE,UAAA,IAAI,EAAEQ,IAAI,CAACE,IAHb;AAIE,UAAA,KAAK,EAAEF,IAAI,CAACG;AAJd,WACOH,IAAI,CAACI,IADZ;AAAA;AAAA;AAAA;AAAA,gBADD,CARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA1BD;;KAAMR,S;AA4BN,eAAeA,SAAf","sourcesContent":["import React, { FC, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"../components/layout\";\nimport Loading from \"../components/ui/loading\";\n\nimport { RouteItem, routes } from \"./routes\";\n\nexport const extractRoute = (all: RouteItem[], route: RouteItem) => {\n  if (route.component) {\n    all.push(route);\n  } else if (route.children) {\n    route.children.reduce(extractRoute, all);\n  }\n  return all;\n};\n\nconst AppRoutes: FC = () => {\n  const allRoutes = routes.reduce<RouteItem[]>(extractRoute, []);\n\n  return (\n    <Switch>\n      <Layout>\n        <Suspense fallback={<Loading />}>\n        {fullscreenRoutes.map((item) =>\n          item.public ? (\n            <Route key={item.path} {...item} />\n          ) : (\n            <PrivateRoute key={item.path} {...item} />\n          ),\n        )}\n          {allRoutes.map((item) => (\n            <Route\n              key={item.name}\n              component={item.component}\n              path={item.path}\n              exact={item.exact}\n            />\n          ))}\n        </Suspense>\n      </Layout>\n    </Switch>\n  );\n};\n\nexport default AppRoutes;\n"]},"metadata":{},"sourceType":"module"}