{"ast":null,"code":"export let ConfigDataType;\n\n(function (ConfigDataType) {\n  ConfigDataType[\"String\"] = \"string\";\n  ConfigDataType[\"Url\"] = \"url\";\n  ConfigDataType[\"Number\"] = \"number\";\n  ConfigDataType[\"ListString\"] = \"list-string\";\n  ConfigDataType[\"Boolean\"] = \"boolean\";\n  ConfigDataType[\"Image\"] = \"image\";\n})(ConfigDataType || (ConfigDataType = {}));\n\nexport let HealthStatus;\n\n(function (HealthStatus) {\n  HealthStatus[\"Error\"] = \"error\";\n  HealthStatus[\"Ok\"] = \"ok\";\n  HealthStatus[\"ShuttingDown\"] = \"shutting_down\";\n})(HealthStatus || (HealthStatus = {}));\n\nexport let ServiceHealthStatus;\n\n(function (ServiceHealthStatus) {\n  ServiceHealthStatus[\"Up\"] = \"up\";\n  ServiceHealthStatus[\"Down\"] = \"down\";\n})(ServiceHealthStatus || (ServiceHealthStatus = {}));\n\nexport let UserRole;\n\n(function (UserRole) {\n  UserRole[\"Authenticated\"] = \"authenticated\";\n  UserRole[\"Member\"] = \"member\";\n  UserRole[\"Ci\"] = \"ci\";\n  UserRole[\"System\"] = \"system\";\n  UserRole[\"DataEditor\"] = \"data-editor\";\n  UserRole[\"DataAdmin\"] = \"data-admin\";\n  UserRole[\"ProtoAdmin\"] = \"proto-admin\";\n  UserRole[\"Admin\"] = \"admin\";\n  UserRole[\"Deployer\"] = \"deployer\";\n  UserRole[\"CsViewer\"] = \"cs-viewer\";\n  UserRole[\"CsEditor\"] = \"cs-editor\";\n})(UserRole || (UserRole = {}));\n\nexport let OrderDirection;\n\n(function (OrderDirection) {\n  OrderDirection[\"ASC\"] = \"ASC\";\n  OrderDirection[\"DESC\"] = \"DESC\";\n})(OrderDirection || (OrderDirection = {}));\n\nexport let FieldDataType;\n\n(function (FieldDataType) {\n  FieldDataType[\"Date\"] = \"date\";\n  FieldDataType[\"Time\"] = \"time\";\n  FieldDataType[\"DateTime\"] = \"date-time\";\n  FieldDataType[\"LongText\"] = \"long-text\";\n  FieldDataType[\"Url\"] = \"url\";\n})(FieldDataType || (FieldDataType = {}));\n\nexport let TaskStatus;\n\n(function (TaskStatus) {\n  TaskStatus[\"PENDING\"] = \"PENDING\";\n  TaskStatus[\"DEPLOYING\"] = \"DEPLOYING\";\n  TaskStatus[\"SUCCESS\"] = \"SUCCESS\";\n  TaskStatus[\"FAIL\"] = \"FAIL\";\n  TaskStatus[\"TIMEOUT\"] = \"TIMEOUT\";\n})(TaskStatus || (TaskStatus = {}));\n\nexport let BlueprintDataState;\n\n(function (BlueprintDataState) {\n  BlueprintDataState[\"A\"] = \"A\";\n  BlueprintDataState[\"D\"] = \"D\";\n  BlueprintDataState[\"U\"] = \"U\";\n})(BlueprintDataState || (BlueprintDataState = {}));\n\nexport let BlueprintDataFormat;\n\n(function (BlueprintDataFormat) {\n  BlueprintDataFormat[\"Xlsx\"] = \"xlsx\";\n  BlueprintDataFormat[\"Csv\"] = \"csv\";\n})(BlueprintDataFormat || (BlueprintDataFormat = {}));\n\nexport let AssetPlatform;\n\n(function (AssetPlatform) {\n  AssetPlatform[\"Android\"] = \"Android\";\n  AssetPlatform[\"IOS\"] = \"iOS\";\n})(AssetPlatform || (AssetPlatform = {}));\n\nvar BodyType;\n\n(function (BodyType) {\n  BodyType[BodyType[\"Json\"] = 0] = \"Json\";\n  BodyType[BodyType[\"FormData\"] = 1] = \"FormData\";\n})(BodyType || (BodyType = {}));\n\nclass HttpClient {\n  constructor(apiConfig = {}) {\n    this.baseUrl = \"\";\n    this.securityData = null;\n    this.securityWorker = null;\n    this.interceptors = {};\n    this.baseApiParams = {\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\"\n    };\n\n    this.setSecurityData = data => {\n      this.securityData = data;\n    };\n\n    this.addQueryParams = rawQuery => {\n      const query = rawQuery || {};\n      const keys = Object.keys(query).filter(key => typeof query[key] !== \"undefined\");\n      return keys.length ? `?${keys.map(key => this.addQueryParam(query, key)).join(\"&\")}` : \"\";\n    };\n\n    this.bodyFormatters = {\n      [BodyType.Json]: JSON.stringify,\n      [BodyType.FormData]: input => Object.keys(input).reduce((data, key) => {\n        data.append(key, input[key]);\n        return data;\n      }, new FormData())\n    };\n\n    this.safeParseResponse = response => {\n      var _response$headers$get;\n\n      const r = response;\n      r.data = null;\n      r.error = null;\n\n      if (!((_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"application/json\"))) {\n        return Promise.resolve(r);\n      }\n\n      return response.json().then(data => {\n        if (r.ok) {\n          r.data = data;\n        } else {\n          r.error = data;\n        }\n\n        return r;\n      }).catch(e => {\n        r.error = e;\n        return r;\n      });\n    };\n\n    this.request = async (path, method, {\n      secure,\n      ...params\n    } = {}, body, bodyType, secureByDefault) => {\n      const requestUrl = `${this.baseUrl}${path}`;\n      const secureOptions = (secureByDefault || secure) && this.securityWorker ? this.securityWorker(this.securityData) : {};\n      let options = this.mergeRequestOptions(params, secureOptions);\n\n      if (this.interceptors.request) {\n        options = await Promise.resolve(this.interceptors.request({\n          options\n        }));\n      }\n\n      const requestOptions = { ...options,\n        method,\n        body: body ? this.bodyFormatters[bodyType || BodyType.Json](body) : null\n      };\n      return fetch(requestUrl, requestOptions).then(async response => {\n        let data = await this.safeParseResponse(response);\n\n        if (this.interceptors.response) {\n          data = await this.interceptors.response({\n            response: data\n          });\n        } // if (!response.ok) throw data;\n\n\n        return data;\n      });\n    };\n\n    Object.assign(this, apiConfig);\n  }\n\n  addQueryParam(query, key) {\n    let value = query[key];\n\n    if (Array.isArray(value)) {\n      value = value.join(\",\");\n    } else if (typeof value === \"object\") {\n      value = JSON.stringify(value);\n    }\n\n    return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  }\n\n  mergeRequestOptions(params, securityParams) {\n    const mergedParams = { ...this.baseApiParams,\n      ...params,\n      ...(securityParams || {}),\n      headers: { ...(this.baseApiParams.headers || {}),\n        ...(params.headers || {}),\n        ...(securityParams && securityParams.headers || {})\n      }\n    };\n\n    if (!mergedParams.headers[\"Content-Type\"]) {\n      delete mergedParams.headers[\"Content-Type\"];\n    }\n\n    return mergedParams;\n  }\n\n}\n/**\n * @title In-House Tool API\n * @version 1.0.0\n * Powered by GearInc\n */\n\n\nexport class Api extends HttpClient {\n  constructor(...args) {\n    super(...args);\n    this.api = {\n      ResidentControllerCreate: (data, params) => this.request(`/api/resident/`, \"POST\", params, data, BodyType.Json, true),\n      ResidentControllerImage: (data, params) => this.request(`/api/resident/image`, \"POST\", params, data, BodyType.Json, true),\n      ResidentControllerList: (query, params) => this.request(`/api/users${this.addQueryParams(query)}`, \"GET\", params, null, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_getAll\n       * @request GET:/api/resident/all\n       * @secure\n       */\n      ResidentControllerGetAll: (query, params) => this.request(`/api/resident/all${this.addQueryParams(query)}`, \"GET\", params, null, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_findOne\n       * @request GET:/api/resident/findOne\n       * @secure\n       */\n      ResidentControllerFindOne: (query, params) => this.request(`/api/resident/findOne${this.addQueryParams(query)}`, \"GET\", params, null, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_findById\n       * @request GET:/api/resident/{id}\n       * @secure\n       */\n      ResidentControllerFindById: (id, params) => this.request(`/api/resident/${id}`, \"GET\", params, null, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_update\n       * @request PUT:/api/resident/{id}\n       * @secure\n       */\n      ResidentControllerUpdate: (id, data, params) => this.request(`/api/resident/${id}`, \"PUT\", params, data, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_deleteById\n       * @request DELETE:/api/resident/{id}\n       * @secure\n       */\n      ResidentControllerDeleteById: (id, params) => this.request(`/api/resident/${id}`, \"DELETE\", params, null, BodyType.Json, true),\n      //// r1\n      Resident1ControllerCreate: (data, params) => this.request(`/api/resident1/`, \"POST\", params, data, BodyType.Json, true),\n      Resident1ControllerImage: (data, params) => this.request(`/api/resident1/image`, \"POST\", params, data, BodyType.Json, true),\n      Resident1ControllerList: (query, params) => this.request(`/api/users${this.addQueryParams(query)}`, \"GET\", params, null, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_getAll\n       * @request GET:/api/resident/all\n       * @secure\n       */\n      Resident1ControllerGetAll: (query, params) => this.request(`/api/resident1/all${this.addQueryParams(query)}`, \"GET\", params, null, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_findOne\n       * @request GET:/api/resident/findOne\n       * @secure\n       */\n      Resident1ControllerFindOne: (query, params) => this.request(`/api/resident1/findOne${this.addQueryParams(query)}`, \"GET\", params, null, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_findById\n       * @request GET:/api/resident/{id}\n       * @secure\n       */\n      Resident1ControllerFindById: (id, params) => this.request(`/api/resident1/${id}`, \"GET\", params, null, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_update\n       * @request PUT:/api/resident/{id}\n       * @secure\n       */\n      Resident1ControllerUpdate: (id, data, params) => this.request(`/api/resident1/${id}`, \"PUT\", params, data, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_deleteById\n       * @request DELETE:/api/resident/{id}\n       * @secure\n       */\n      Resident1ControllerDeleteById: (id, params) => this.request(`/api/resident1/${id}`, \"DELETE\", params, null, BodyType.Json, true),\n      ////2 \n      Resident2ControllerCreate: (data, params) => this.request(`/api/resident2/`, \"POST\", params, data, BodyType.Json, true),\n      Resident2ControllerImage: (data, params) => this.request(`/api/resident2/image`, \"POST\", params, data, BodyType.Json, true),\n      Resident2ControllerList: (query, params) => this.request(`/api/users2${this.addQueryParams(query)}`, \"GET\", params, null, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_getAll\n       * @request GET:/api/resident/all\n       * @secure\n       */\n      Resident2ControllerGetAll: (query, params) => this.request(`/api/resident/all${this.addQueryParams(query)}`, \"GET\", params, null, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_findOne\n       * @request GET:/api/resident/findOne\n       * @secure\n       */\n      Resident2ControllerFindOne: (query, params) => this.request(`/api/resident/findOne${this.addQueryParams(query)}`, \"GET\", params, null, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_findById\n       * @request GET:/api/resident/{id}\n       * @secure\n       */\n      Resident2ControllerFindById: (id, params) => this.request(`/api/resident/${id}`, \"GET\", params, null, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_update\n       * @request PUT:/api/resident/{id}\n       * @secure\n       */\n      Resident2ControllerUpdate: (id, data, params) => this.request(`/api/resident/${id}`, \"PUT\", params, data, BodyType.Json, true),\n\n      /**\n       * @tags users\n       * @name ResidentController_deleteById\n       * @request DELETE:/api/resident/{id}\n       * @secure\n       */\n      Resident2ControllerDeleteById: (id, params) => this.request(`/api/resident/${id}`, \"DELETE\", params, null, BodyType.Json, true)\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/abc/Desktop/templateworkspace/packages/client/src/services/base/request.ts"],"names":["ConfigDataType","HealthStatus","ServiceHealthStatus","UserRole","OrderDirection","FieldDataType","TaskStatus","BlueprintDataState","BlueprintDataFormat","AssetPlatform","BodyType","HttpClient","constructor","apiConfig","baseUrl","securityData","securityWorker","interceptors","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","data","addQueryParams","rawQuery","query","keys","Object","filter","key","length","map","addQueryParam","join","bodyFormatters","Json","JSON","stringify","FormData","input","reduce","append","safeParseResponse","response","r","error","get","includes","Promise","resolve","json","then","ok","catch","e","request","path","method","secure","params","body","bodyType","secureByDefault","requestUrl","secureOptions","options","mergeRequestOptions","requestOptions","fetch","assign","value","Array","isArray","encodeURIComponent","securityParams","mergedParams","Api","api","ResidentControllerCreate","ResidentControllerImage","ResidentControllerList","ResidentControllerGetAll","ResidentControllerFindOne","ResidentControllerFindById","id","ResidentControllerUpdate","ResidentControllerDeleteById","Resident1ControllerCreate","Resident1ControllerImage","Resident1ControllerList","Resident1ControllerGetAll","Resident1ControllerFindOne","Resident1ControllerFindById","Resident1ControllerUpdate","Resident1ControllerDeleteById","Resident2ControllerCreate","Resident2ControllerImage","Resident2ControllerList","Resident2ControllerGetAll","Resident2ControllerFindOne","Resident2ControllerFindById","Resident2ControllerUpdate","Resident2ControllerDeleteById"],"mappings":"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","sourcesContent":["import { Resident } from \"../resident/model\";\n\nexport interface ClientConfigResponseDto {\n  googleClientId: string;\n  appIcon?: string;\n}\n\nexport enum ConfigDataType {\n  String = \"string\",\n  Url = \"url\",\n  Number = \"number\",\n  ListString = \"list-string\",\n  Boolean = \"boolean\",\n  Image = \"image\",\n}\n\nexport interface SystemConfig {\n  key: string;\n  title: string;\n  description?: string;\n  group?: string;\n  dataType?: ConfigDataType;\n  configurable?: boolean;\n  required?: boolean;\n  value?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface SystemConfigDto {\n  key: string;\n  value?: string;\n}\n\nexport enum HealthStatus {\n  Error = \"error\",\n  Ok = \"ok\",\n  ShuttingDown = \"shutting_down\",\n}\n\nexport enum ServiceHealthStatus {\n  Up = \"up\",\n  Down = \"down\",\n}\n\nexport interface ServiceHealthStatusDto {\n  status: ServiceHealthStatus;\n  message?: string;\n}\n\nexport interface ServiceHealthDto {\n  database: ServiceHealthStatusDto;\n}\n\nexport interface HealthDto {\n  status: HealthStatus;\n\n  /** Uptime in seconds */\n  uptime: number;\n\n  /** Is in maintenance mode? */\n  maintenance: boolean;\n  info: ServiceHealthDto;\n  error: ServiceHealthDto;\n}\n\nexport interface LoginRequestDto {\n  googleTokenId: string;\n}\n\nexport interface LoginResponseDto {\n  token: string;\n}\n\nexport enum UserRole {\n  Authenticated = \"authenticated\",\n  Member = \"member\",\n  Ci = \"ci\",\n  System = \"system\",\n  DataEditor = \"data-editor\",\n  DataAdmin = \"data-admin\",\n  ProtoAdmin = \"proto-admin\",\n  Admin = \"admin\",\n  Deployer = \"deployer\",\n  CsViewer = \"cs-viewer\",\n  CsEditor = \"cs-editor\",\n}\n\nexport interface UserRoleMapping {\n  role: UserRole;\n  environments?: string[];\n  isBaseRole?: string;\n}\n\nexport interface Role {\n  name: string;\n  title: string;\n  description: string;\n  isDefault?: boolean;\n  environmentSpecific?: boolean;\n  includes?: string[];\n}\n\nexport interface StringOperators {\n  in?: string[];\n  nin?: string[];\n}\n\nexport interface NumberOperators {\n  in?: number[];\n  nin?: number[];\n  gt?: number;\n  gte?: number;\n  lt?: number;\n  lte?: number;\n}\n\nexport interface DateOperators {\n  gt?: string;\n  gte?: string;\n  lt?: string;\n  lte?: string;\n}\n\nexport interface ResidentWhereOptions {\n  email?: string | StringOperators;\n  name?: string | StringOperators;\n  locked?: number | NumberOperators;\n  avatar?: string | StringOperators;\n}\n\nexport enum OrderDirection {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\nexport interface ResidentOrderOptions {\n  email?: OrderDirection;\n  name?: OrderDirection;\n  locked?: OrderDirection;\n  avatar?: OrderDirection;\n}\n\nexport interface ResidentPagingFilterOptions {\n  select?: (\"email\" | \"name\" | \"locked\" | \"avatar\")[];\n  where?: ResidentWhereOptions;\n  order?: ResidentOrderOptions;\n  skip?: number;\n  take?: number;\n}\n\nexport interface ResidentPagingResult {\n  total: number;\n  skip: number;\n  take: number;\n  data: Resident[];\n}\n\nexport interface LogWhereOptions {\n  id?: number | NumberOperators;\n  action?: string | StringOperators;\n  avatar?: string | StringOperators;\n  name?: string | StringOperators;\n  note?: string | StringOperators;\n  pageName?: string | StringOperators;\n  updateBy?: string | StringOperators;\n  updateOn?: NumberOperators;\n}\n\nexport interface LogOrderOptions {\n  id?: OrderDirection;\n  action?: OrderDirection;\n  avatar?: OrderDirection;\n  name?: OrderDirection;\n  note?: OrderDirection;\n  pageName?: OrderDirection;\n  updateBy?: OrderDirection;\n  updateOn?: OrderDirection;\n}\n\nexport interface LogPagingFilterOptions {\n  select?: (\n    | \"id\"\n    | \"action\"\n    | \"avatar\"\n    | \"name\"\n    | \"note\"\n    | \"pageName\"\n    | \"updateBy\"\n    | \"updateOn\"\n  )[];\n  where?: LogWhereOptions;\n  order?: LogOrderOptions;\n  skip?: number;\n  take?: number;\n}\n\nexport interface Log {\n  id?: number;\n  action: string;\n  avatar: string;\n  name?: string;\n  note?: string;\n  pageName: string;\n  updateBy: string;\n  updateOn: string;\n}\n\nexport interface LogPagingResult {\n  total: number;\n  skip: number;\n  take: number;\n  data: Log[];\n}\n\nexport interface BlueprintProtoUpdateHistory {\n  id?: number;\n  sha: string;\n  note?: string;\n  status: \"UPDATING\" | \"SUCCESS\" | \"FAILED\" | \"TIMEOUT\";\n  source: \"GITLAB\" | \"TOOL\";\n\n  /** Raw proto structure in JSON */\n  proto?: string;\n  userEmail: string;\n  userAvatar?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface GitlabBodyDto {\n  branch?: string;\n  note?: string;\n}\n\nexport interface BlueprintProtoUpdateHistoryWhereOptions {\n  id?: number | NumberOperators;\n  sha?: string | StringOperators;\n  note?: string | StringOperators;\n  status?: \"UPDATING\" | \"SUCCESS\" | \"FAILED\" | \"TIMEOUT\" | StringOperators;\n  source?: \"GITLAB\" | \"TOOL\" | StringOperators;\n  proto?: string | StringOperators;\n  userEmail?: string | StringOperators;\n  userAvatar?: string | StringOperators;\n}\n\nexport interface BlueprintProtoUpdateHistoryOrderOptions {\n  id?: OrderDirection;\n  sha?: OrderDirection;\n  note?: OrderDirection;\n  status?: OrderDirection;\n  source?: OrderDirection;\n  proto?: OrderDirection;\n  userEmail?: OrderDirection;\n  userAvatar?: OrderDirection;\n}\n\nexport interface BlueprintProtoUpdateHistoryPagingFilterOptions {\n  select?: (\n    | \"id\"\n    | \"sha\"\n    | \"note\"\n    | \"status\"\n    | \"source\"\n    | \"proto\"\n    | \"userEmail\"\n    | \"userAvatar\"\n  )[];\n  where?: BlueprintProtoUpdateHistoryWhereOptions;\n  order?: BlueprintProtoUpdateHistoryOrderOptions;\n  skip?: number;\n  take?: number;\n}\n\nexport interface BlueprintProtoUpdateHistoryPagingResult {\n  total: number;\n  skip: number;\n  take: number;\n  data: BlueprintProtoUpdateHistory[];\n}\n\nexport interface VariantSetting {\n  name?: string;\n  key: string;\n}\n\nexport interface FieldReference {\n  type: string;\n  valueField: string;\n  displayField?: string;\n}\n\nexport enum FieldDataType {\n  Date = \"date\",\n  Time = \"time\",\n  DateTime = \"date-time\",\n  LongText = \"long-text\",\n  Url = \"url\",\n}\n\nexport interface FieldSettings {\n  field: string;\n  reference?: FieldReference;\n  required?: boolean;\n  editable?: boolean;\n  dataType?: FieldDataType;\n}\n\nexport interface BlueprintProtoWhereOptions {\n  name?: string | StringOperators;\n  type?: string | StringOperators;\n  shortName?: string | StringOperators;\n\n  /** Raw proto structure in JSON */\n  proto?: object;\n\n  /** Indicate a protobuf message represent an Enum */\n  isEnum?: boolean;\n\n  /** Indicate a protobuf message represent a Blueprint */\n  isBlueprint?: boolean;\n\n  /** Indicate Blueprint has multiple variants */\n  isVariant?: boolean;\n  variants?: VariantSetting[];\n  isSingle?: boolean;\n  idFields?: string[];\n  settings?: FieldSettings[];\n\n  /** Indicate a protobuf message is disabled */\n  enabled?: object;\n}\n\nexport interface BlueprintProtoOrderOptions {\n  name?: OrderDirection;\n  type?: OrderDirection;\n  shortName?: OrderDirection;\n  proto?: OrderDirection;\n  isEnum?: OrderDirection;\n  isBlueprint?: OrderDirection;\n  isVariant?: OrderDirection;\n  variants?: OrderDirection;\n  isSingle?: OrderDirection;\n  idFields?: OrderDirection;\n  settings?: OrderDirection;\n  enabled?: OrderDirection;\n}\n\nexport interface BlueprintProtoPagingFilterOptions {\n  select?: (\n    | \"name\"\n    | \"type\"\n    | \"shortName\"\n    | \"proto\"\n    | \"isEnum\"\n    | \"isBlueprint\"\n    | \"isVariant\"\n    | \"variants\"\n    | \"isSingle\"\n    | \"idFields\"\n    | \"settings\"\n    | \"enabled\"\n  )[];\n  where?: BlueprintProtoWhereOptions;\n  order?: BlueprintProtoOrderOptions;\n  skip?: number;\n  take?: number;\n}\n\nexport interface BlueprintProto {\n  /** Protobuf message type name */\n  name: string;\n\n  /** Protobuf message type */\n  type: string;\n  shortName: string;\n\n  /** Raw proto structure in JSON */\n  proto: object;\n\n  /** Indicate a protobuf message represent an Enum */\n  isEnum?: boolean;\n\n  /** Indicate a protobuf message represent a Blueprint */\n  isBlueprint?: boolean;\n\n  /** Indicate Blueprint has multiple variants */\n  isVariant?: boolean;\n  variants?: VariantSetting[];\n  isSingle?: boolean;\n  idFields?: string[];\n  settings?: FieldSettings[];\n\n  /** Indicate a protobuf message is disabled */\n  enabled?: object;\n  protoUpdateId?: number;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface CloneBlueprintProtoDto {\n  name: string;\n  shortName: string;\n  oldName: string;\n}\n\nexport interface BlueprintDataVersionWhereOptions {\n  name?: string | StringOperators;\n  isBaseVersion?: boolean;\n  baseVersion?: string | StringOperators;\n\n  /** Indicate this version is not editable */\n  isReadOnly?: boolean;\n  protoUpdateId?: number | NumberOperators;\n}\n\nexport interface BlueprintDataVersionOrderOptions {\n  name?: OrderDirection;\n  isBaseVersion?: OrderDirection;\n  baseVersion?: OrderDirection;\n  isReadOnly?: OrderDirection;\n  protoUpdateId?: OrderDirection;\n}\n\nexport interface BlueprintDataVersionPagingFilterOptions {\n  select?: (\n    | \"name\"\n    | \"isBaseVersion\"\n    | \"baseVersion\"\n    | \"isReadOnly\"\n    | \"protoUpdateId\"\n  )[];\n  where?: BlueprintDataVersionWhereOptions;\n  order?: BlueprintDataVersionOrderOptions;\n  skip?: number;\n  take?: number;\n}\n\nexport interface BlueprintDataVersion {\n  name: string;\n  isBaseVersion: boolean;\n  baseVersion?: string;\n\n  /** Indicate this version is not editable */\n  isReadOnly?: boolean;\n\n  /** Lock this data version with a proto version */\n  protoUpdateId?: number;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport enum TaskStatus {\n  PENDING = \"PENDING\",\n  DEPLOYING = \"DEPLOYING\",\n  SUCCESS = \"SUCCESS\",\n  FAIL = \"FAIL\",\n  TIMEOUT = \"TIMEOUT\",\n}\n\nexport interface BlueprintDeployHistory {\n  /** Task status */\n  status: TaskStatus;\n  message?: string;\n\n  /** Schedule a task */\n  scheduledAt?: string;\n  startTime?: string;\n  endTime?: string;\n  id?: number;\n\n  /** Deploy environment */\n  environment: string;\n\n  /** Blueprint proto type name */\n  types: string[];\n  version: string;\n\n  /** Timestamp of last change log record */\n  lastChangedAt: string;\n\n  /** ID of last proto update record */\n  lastProtoUpdateId: number;\n  note?: string;\n  forceUpdate?: boolean;\n\n  /** Who made the change */\n  userEmail: string;\n  userAvatar?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface BlueprintDataVersionDetailDto {\n  version: BlueprintDataVersion;\n  protoUpdate?: BlueprintProtoUpdateHistory;\n  deployments: BlueprintDeployHistory[];\n}\n\nexport interface BlueprintDataVersionPagingResult {\n  total: number;\n  skip: number;\n  take: number;\n  data: BlueprintDataVersion[];\n}\n\nexport interface BlueprintDeployHistoryWhereOptions {\n  status?:\n    | \"PENDING\"\n    | \"DEPLOYING\"\n    | \"SUCCESS\"\n    | \"FAIL\"\n    | \"TIMEOUT\"\n    | StringOperators;\n  message?: string | StringOperators;\n  scheduledAt?: NumberOperators;\n  startTime?: NumberOperators;\n  endTime?: NumberOperators;\n  id?: number | NumberOperators;\n  environment?: string | StringOperators;\n\n  /** Blueprint proto type name */\n  types?: string[];\n  version?: string | StringOperators;\n  lastChangedAt?: string | StringOperators;\n  lastProtoUpdateId?: number | NumberOperators;\n  note?: string | StringOperators;\n  forceUpdate?: boolean;\n  userEmail?: string | StringOperators;\n  userAvatar?: string | StringOperators;\n}\n\nexport interface BlueprintDeployHistoryOrderOptions {\n  status?: OrderDirection;\n  message?: OrderDirection;\n  scheduledAt?: OrderDirection;\n  startTime?: OrderDirection;\n  endTime?: OrderDirection;\n  id?: OrderDirection;\n  environment?: OrderDirection;\n  types?: OrderDirection;\n  version?: OrderDirection;\n  lastChangedAt?: OrderDirection;\n  lastProtoUpdateId?: OrderDirection;\n  note?: OrderDirection;\n  forceUpdate?: OrderDirection;\n  userEmail?: OrderDirection;\n  userAvatar?: OrderDirection;\n}\n\nexport interface BlueprintDeployHistoryPagingFilterOptions {\n  select?: (\n    | \"status\"\n    | \"message\"\n    | \"scheduledAt\"\n    | \"startTime\"\n    | \"endTime\"\n    | \"id\"\n    | \"environment\"\n    | \"types\"\n    | \"version\"\n    | \"lastChangedAt\"\n    | \"lastProtoUpdateId\"\n    | \"note\"\n    | \"forceUpdate\"\n    | \"userEmail\"\n    | \"userAvatar\"\n  )[];\n  where?: BlueprintDeployHistoryWhereOptions;\n  order?: BlueprintDeployHistoryOrderOptions;\n  skip?: number;\n  take?: number;\n}\n\nexport interface BlueprintDeployHistoryPagingResult {\n  total: number;\n  skip: number;\n  take: number;\n  data: BlueprintDeployHistory[];\n}\n\nexport enum BlueprintDataState {\n  A = \"A\",\n  D = \"D\",\n  U = \"U\",\n}\n\nexport interface BlueprintData {\n  objId?: string;\n\n  /** Blueprint proto type name */\n  type: string;\n\n  /** Blueprint version */\n  version: string;\n\n  /** Blueprint data variant */\n  variant?: string;\n  data: object;\n\n  /** Indicate state of the data in current version is (A)dded, (D)eleted or (U)pdated. Not set when untouched */\n  state?: BlueprintDataState;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface BlueprintDataDiffNew {\n  kind: string;\n  path?: (string | number)[];\n  rhs: any;\n}\n\nexport interface BlueprintDataDiffDeleted {\n  kind: string;\n  path?: (string | number)[];\n  lhs: any;\n}\n\nexport interface BlueprintDataDiffEdit {\n  kind: string;\n  path?: (string | number)[];\n  lhs: any;\n  rhs: any;\n}\n\nexport interface BlueprintDataDiffArray {\n  kind: string;\n  path?: (string | number)[];\n  index: number;\n  item:\n    | BlueprintDataDiffNew\n    | BlueprintDataDiffDeleted\n    | BlueprintDataDiffEdit\n    | BlueprintDataDiffArray;\n}\n\nexport interface BlueprintDataChangeLog {\n  id?: number;\n\n  /** Modified blueprint object ID */\n  objId: string;\n\n  /** Protobuf type name */\n  type: string;\n\n  /** Blueprint version */\n  version: string;\n\n  /** Blueprint data variant */\n  variant?: string;\n  data: (\n    | BlueprintDataDiffNew\n    | BlueprintDataDiffDeleted\n    | BlueprintDataDiffEdit\n    | BlueprintDataDiffArray\n  )[];\n\n  /** Who made the change */\n  userEmail: string;\n  userAvatar?: string;\n  deletedAt?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface BlueprintDataWithChangeLogsDto {\n  data: BlueprintData[];\n  changeLogs?: BlueprintDataChangeLog[];\n  deletedData?: BlueprintData[];\n}\n\nexport interface BlueprintDataStoreResultDto {\n  data: BlueprintData;\n  change?: BlueprintDataChangeLog;\n}\n\nexport interface DeleteMultipleBlueprintDataDto {\n  objIds: string[];\n}\n\nexport interface BlueprintDataMoveChangesDto {\n  version: string;\n  toVersion: string;\n  type: string;\n  objIds?: string[];\n}\n\nexport interface BlueprintDataMoveTypeChangesDto {\n  type: string;\n  objIds?: string[];\n}\n\nexport interface BlueprintDataMoveMultipleChangesDto {\n  version: string;\n  toVersion: string;\n  types: BlueprintDataMoveTypeChangesDto[];\n}\n\nexport interface BlueprintDataChangeAggregate {\n  id?: number;\n\n  /** Modified blueprint object ID */\n  objId: string;\n\n  /** Protobuf type name */\n  type: string;\n\n  /** Blueprint version */\n  version: string;\n\n  /** Blueprint data variant */\n  variant?: string;\n  data: (\n    | BlueprintDataDiffNew\n    | BlueprintDataDiffDeleted\n    | BlueprintDataDiffEdit\n    | BlueprintDataDiffArray\n  )[];\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface BlueprintDataChangeLogWhereOptions {\n  id?: number | NumberOperators;\n  objId?: string | StringOperators;\n  type?: string | StringOperators;\n  version?: string | StringOperators;\n  variant?: string | StringOperators;\n  data?: (\n    | BlueprintDataDiffNew\n    | BlueprintDataDiffDeleted\n    | BlueprintDataDiffEdit\n    | BlueprintDataDiffArray\n  )[];\n  userEmail?: string | StringOperators;\n  userAvatar?: string | StringOperators;\n}\n\nexport interface BlueprintDataChangeLogOrderOptions {\n  id?: OrderDirection;\n  objId?: OrderDirection;\n  type?: OrderDirection;\n  version?: OrderDirection;\n  variant?: OrderDirection;\n  data?: OrderDirection;\n  userEmail?: OrderDirection;\n  userAvatar?: OrderDirection;\n}\n\nexport interface BlueprintDataChangeLogPagingFilterOptions {\n  select?: (\n    | \"id\"\n    | \"objId\"\n    | \"type\"\n    | \"version\"\n    | \"variant\"\n    | \"data\"\n    | \"userEmail\"\n    | \"userAvatar\"\n  )[];\n  where?: BlueprintDataChangeLogWhereOptions;\n  order?: BlueprintDataChangeLogOrderOptions;\n  skip?: number;\n  take?: number;\n}\n\nexport interface BlueprintDataChangeLogPagingResult {\n  total: number;\n  skip: number;\n  take: number;\n  data: BlueprintDataChangeLog[];\n}\n\nexport enum BlueprintDataFormat {\n  Xlsx = \"xlsx\",\n  Csv = \"csv\",\n}\n\nexport interface FileUploadDto {\n  file: File;\n}\n\nexport interface BlueprintImportResultDto {\n  type: string;\n  total: number;\n}\n\nexport interface BlueprintDeployDto {\n  environment: string;\n  version: string;\n  types?: string[];\n  note?: string;\n  forceUpdate?: boolean;\n}\n\nexport interface EnvironmentWhereOptions {\n  name?: string | StringOperators;\n  config?: object;\n}\n\nexport interface EnvironmentOrderOptions {\n  name?: OrderDirection;\n  config?: OrderDirection;\n}\n\nexport interface EnvironmentPagingFilterOptions {\n  select?: (\"name\" | \"config\")[];\n  where?: EnvironmentWhereOptions;\n  order?: EnvironmentOrderOptions;\n  skip?: number;\n  take?: number;\n}\n\nexport interface EnvironmentConfigField {\n  name: string;\n  type: \"number\" | \"string\" | \"boolean\" | \"credentials-url\";\n  required?: boolean;\n  dataType: string;\n}\n\nexport interface Environment {\n  name: string;\n  config: object;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface EnvironmentPagingResult {\n  total: number;\n  skip: number;\n  take: number;\n  data: Environment[];\n}\n\nexport interface AssetConfigWhereOptions {\n  id?: number | NumberOperators;\n  clientVersion?: string | StringOperators;\n  odl?: string | StringOperators;\n  odb?: string | StringOperators;\n  assetBundle?: string | StringOperators;\n  platform?: \"Android\" | \"iOS\" | StringOperators;\n  environment?: string | StringOperators;\n}\n\nexport interface AssetConfigOrderOptions {\n  id?: OrderDirection;\n  clientVersion?: OrderDirection;\n  odl?: OrderDirection;\n  odb?: OrderDirection;\n  assetBundle?: OrderDirection;\n  platform?: OrderDirection;\n  environment?: OrderDirection;\n}\n\nexport interface AssetConfigPagingFilterOptions {\n  select?: (\n    | \"id\"\n    | \"clientVersion\"\n    | \"odl\"\n    | \"odb\"\n    | \"assetBundle\"\n    | \"platform\"\n    | \"environment\"\n  )[];\n  where?: AssetConfigWhereOptions;\n  order?: AssetConfigOrderOptions;\n  skip?: number;\n  take?: number;\n}\n\nexport enum AssetPlatform {\n  Android = \"Android\",\n  IOS = \"iOS\",\n}\n\nexport interface AssetConfig {\n  id?: number;\n  clientVersion: string;\n  odl: string;\n  odb: string;\n  assetBundle: string;\n  platform: AssetPlatform;\n  environment: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface AssetConfigPagingResult {\n  total: number;\n  skip: number;\n  take: number;\n  data: AssetConfig[];\n}\n\nexport interface GameConfigWhereOptions {\n  id?: number | NumberOperators;\n  blueprintVersion?: string | StringOperators;\n  environment?: string | StringOperators;\n  clientVersion?: string | StringOperators;\n  score?: number | NumberOperators;\n  keyRedis?: string | StringOperators;\n  forcedUpdate?: boolean;\n}\n\nexport interface GameConfigOrderOptions {\n  id?: OrderDirection;\n  blueprintVersion?: OrderDirection;\n  environment?: OrderDirection;\n  clientVersion?: OrderDirection;\n  score?: OrderDirection;\n  keyRedis?: OrderDirection;\n  forcedUpdate?: OrderDirection;\n}\n\nexport interface GameConfigPagingFilterOptions {\n  select?: (\n    | \"id\"\n    | \"blueprintVersion\"\n    | \"environment\"\n    | \"clientVersion\"\n    | \"score\"\n    | \"keyRedis\"\n    | \"forcedUpdate\"\n  )[];\n  where?: GameConfigWhereOptions;\n  order?: GameConfigOrderOptions;\n  skip?: number;\n  take?: number;\n}\n\nexport interface GameConfig {\n  id?: number;\n  blueprintVersion: string;\n  environment: string;\n  clientVersion: string;\n  score?: number;\n  keyRedis?: string;\n  forcedUpdate?: boolean;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface GameConfigPagingResult {\n  total: number;\n  skip: number;\n  take: number;\n  data: GameConfig[];\n}\n\nexport interface GenerateTokenDto {\n  expireDate?: string;\n}\n\nexport interface GenerateTokenResponseDto {\n  token: string;\n}\n\nexport interface BaseCurrencyBlueprint {\n  id: string;\n  capacity: number;\n}\n\nexport interface Currency {\n  currency: string;\n  amount: number;\n  update: number;\n}\n\nexport interface RbeDto {\n  achievements: object;\n  events: Record<string, any>;\n}\n\nexport interface Player {\n  id: string;\n  playerId: string;\n  name: string;\n  version: string;\n  xp: number;\n  ban: boolean;\n  resources: Currency[];\n  created: number;\n  update: number;\n  rbe?: RbeDto;\n}\n\nexport interface CurrencyDto {\n  currency: string;\n  amount: number;\n  update: number;\n}\n\nexport interface InboxMessageExtraProto {\n  name: string;\n  proto: object;\n}\n\nexport interface InboxMessageProtoDto {\n  messageBlueprint: BlueprintProto;\n  extraProtos?: InboxMessageExtraProto[];\n}\n\nexport interface InboxDto {\n  file: File;\n  environment: string;\n  data: string;\n  note?: string;\n  scheduledAt?: string;\n}\n\nexport interface InboxHistory {\n  /** Task status */\n  status: TaskStatus;\n  message?: string;\n\n  /** Schedule a task */\n  scheduledAt?: string;\n  startTime?: string;\n  endTime?: string;\n  id?: number;\n  environment: string;\n  data: object;\n  playerIds: string[];\n  note?: string;\n  userEmail: string;\n  userAvatar?: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface InboxHistoryWhereOptions {\n  status?:\n    | \"PENDING\"\n    | \"DEPLOYING\"\n    | \"SUCCESS\"\n    | \"FAIL\"\n    | \"TIMEOUT\"\n    | StringOperators;\n  message?: string | StringOperators;\n  scheduledAt?: NumberOperators;\n  startTime?: NumberOperators;\n  endTime?: NumberOperators;\n  id?: number | NumberOperators;\n  environment?: string | StringOperators;\n  data?: object;\n  playerIds?: string[];\n  note?: string | StringOperators;\n  userEmail?: string | StringOperators;\n  userAvatar?: string | StringOperators;\n}\n\nexport interface InboxHistoryOrderOptions {\n  status?: OrderDirection;\n  message?: OrderDirection;\n  scheduledAt?: OrderDirection;\n  startTime?: OrderDirection;\n  endTime?: OrderDirection;\n  id?: OrderDirection;\n  environment?: OrderDirection;\n  data?: OrderDirection;\n  playerIds?: OrderDirection;\n  note?: OrderDirection;\n  userEmail?: OrderDirection;\n  userAvatar?: OrderDirection;\n}\n\nexport interface InboxHistoryPagingFilterOptions {\n  select?: (\n    | \"status\"\n    | \"message\"\n    | \"scheduledAt\"\n    | \"startTime\"\n    | \"endTime\"\n    | \"id\"\n    | \"environment\"\n    | \"data\"\n    | \"playerIds\"\n    | \"note\"\n    | \"userEmail\"\n    | \"userAvatar\"\n  )[];\n  where?: InboxHistoryWhereOptions;\n  order?: InboxHistoryOrderOptions;\n  skip?: number;\n  take?: number;\n}\n\nexport interface InboxHistoryPagingResult {\n  total: number;\n  skip: number;\n  take: number;\n  data: InboxHistory[];\n}\n\nexport interface BotWhereOptions {\n  id?: number | NumberOperators;\n  userId?: string | StringOperators;\n  playerId?: string | StringOperators;\n  leaderBoard?: string | StringOperators;\n  score?: number | NumberOperators;\n  clientVersion?: string | StringOperators;\n  enviroment?: string | StringOperators;\n}\n\nexport interface BotOrderOptions {\n  id?: OrderDirection;\n  userId?: OrderDirection;\n  playerId?: OrderDirection;\n  leaderBoard?: OrderDirection;\n  score?: OrderDirection;\n  clientVersion?: OrderDirection;\n  enviroment?: OrderDirection;\n}\n\nexport interface BotPagingFilterOptions {\n  select?: (\n    | \"id\"\n    | \"userId\"\n    | \"playerId\"\n    | \"leaderBoard\"\n    | \"score\"\n    | \"clientVersion\"\n    | \"enviroment\"\n  )[];\n  where?: BotWhereOptions;\n  order?: BotOrderOptions;\n  skip?: number;\n  take?: number;\n}\n\nexport interface BotBulkCreateDto {\n  clientVersion: string;\n  numberBot: number;\n  score: number;\n  leaderBoard: string;\n  enviroment: string;\n}\n\nexport interface Bot {\n  id?: number;\n  userId: string;\n  playerId: string;\n  leaderBoard: string;\n  score: number;\n  clientVersion: string;\n  enviroment: string;\n  createdAt?: string;\n  updatedAt?: string;\n}\n\nexport interface BotPagingResult {\n  total: number;\n  skip: number;\n  take: number;\n  data: Bot[];\n}\n\nexport type RequestParams = Omit<RequestInit, \"body\" | \"method\"> & {\n  secure?: boolean;\n};\n\nexport type Interceptors = {\n  request?: ({\n    options,\n  }: {\n    options: RequestParams;\n  }) => Promise<RequestParams> | RequestParams;\n  response?: <D extends unknown = unknown, E extends unknown = unknown>({\n    response,\n  }: {\n    response: HttpResponse<D, E>;\n  }) => Promise<HttpResponse<D, E>>;\n};\n\nexport type RequestQueryParamsType = Record<string | number, any>;\n\ninterface ApiConfig<SecurityDataType> {\n  baseUrl?: string;\n  baseApiParams?: RequestParams;\n  securityWorker?: (securityData: SecurityDataType) => RequestParams;\n  interceptors?: Interceptors;\n}\n\nexport interface HttpResponse<D extends unknown, E extends unknown = unknown>\n  extends Response {\n  data: D | null;\n  error: E | null;\n}\n\nenum BodyType {\n  Json,\n  FormData,\n}\n\nclass HttpClient<SecurityDataType> {\n  public baseUrl: string = \"\";\n  private securityData: SecurityDataType = null as any;\n  private securityWorker: null | ApiConfig<SecurityDataType>[\"securityWorker\"] =\n    null;\n  private interceptors: Interceptors = {};\n\n  private baseApiParams: RequestParams = {\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    redirect: \"follow\",\n    referrerPolicy: \"no-referrer\",\n  };\n\n  constructor(apiConfig: ApiConfig<SecurityDataType> = {}) {\n    Object.assign(this, apiConfig);\n  }\n\n  public setSecurityData = (data: SecurityDataType) => {\n    this.securityData = data;\n  };\n\n  private addQueryParam(query: RequestQueryParamsType, key: string): string {\n    let value: any = query[key];\n    if (Array.isArray(value)) {\n      value = value.join(\",\");\n    } else if (typeof value === \"object\") {\n      value = JSON.stringify(value);\n    }\n    return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n  }\n\n  protected addQueryParams = (rawQuery?: RequestQueryParamsType): string => {\n    const query = rawQuery || {};\n    const keys = Object.keys(query).filter(\n      (key) => typeof query[key] !== \"undefined\"\n    );\n    return keys.length\n      ? `?${keys.map((key) => this.addQueryParam(query, key)).join(\"&\")}`\n      : \"\";\n  };\n\n  private bodyFormatters: Record<BodyType, (input: any) => any> = {\n    [BodyType.Json]: JSON.stringify,\n    [BodyType.FormData]: (input: any) =>\n      Object.keys(input).reduce((data, key) => {\n        data.append(key, input[key]);\n        return data;\n      }, new FormData()),\n  };\n\n  private mergeRequestOptions(\n    params: RequestParams,\n    securityParams?: RequestParams\n  ): RequestParams {\n    const mergedParams = {\n      ...this.baseApiParams,\n      ...params,\n      ...(securityParams || {}),\n      headers: {\n        ...(this.baseApiParams.headers || {}),\n        ...(params.headers || {}),\n        ...((securityParams && securityParams.headers) || {}),\n      },\n    };\n\n    if (!(mergedParams.headers as any)[\"Content-Type\"]) {\n      delete (mergedParams.headers as any)[\"Content-Type\"];\n    }\n    return mergedParams;\n  }\n\n  private safeParseResponse = <T = any, E = any>(\n    response: Response\n  ): Promise<HttpResponse<T, E>> => {\n    const r = response as HttpResponse<T, E>;\n    r.data = null;\n    r.error = null;\n\n    if (!response.headers.get(\"content-type\")?.includes(\"application/json\")) {\n      return Promise.resolve(r);\n    }\n\n    return response\n      .json()\n      .then((data) => {\n        if (r.ok) {\n          r.data = data;\n        } else {\n          r.error = data;\n        }\n        return r;\n      })\n      .catch((e) => {\n        r.error = e;\n        return r;\n      });\n  };\n\n  public request = async <T = any, E = any>(\n    path: string,\n    method: string,\n    { secure, ...params }: RequestParams = {},\n    body?: any,\n    bodyType?: BodyType,\n    secureByDefault?: boolean\n  ): Promise<HttpResponse<T, E>> => {\n    const requestUrl = `${this.baseUrl}${path}`;\n    const secureOptions =\n      (secureByDefault || secure) && this.securityWorker\n        ? this.securityWorker(this.securityData)\n        : {};\n    let options = this.mergeRequestOptions(params, secureOptions);\n    if (this.interceptors.request) {\n      options = await Promise.resolve(this.interceptors.request({ options }));\n    }\n    const requestOptions = {\n      ...options,\n      method,\n      body: body ? this.bodyFormatters[bodyType || BodyType.Json](body) : null,\n    };\n\n    return fetch(requestUrl, requestOptions).then(async (response) => {\n      let data = await this.safeParseResponse<T, E>(response);\n      if (this.interceptors.response) {\n        data = await this.interceptors.response<T, E>({ response: data });\n      }\n      // if (!response.ok) throw data;\n      return data;\n    });\n  };\n}\n\n/**\n * @title In-House Tool API\n * @version 1.0.0\n * Powered by GearInc\n */\nexport class Api<SecurityDataType = any> extends HttpClient<SecurityDataType> {\n  api = {\n    ResidentControllerCreate: (data: Resident, params?: RequestParams) =>\n      this.request<Resident, any>(\n        `/api/resident/`,\n        \"POST\",\n        params,\n        data,\n        BodyType.Json,\n        true\n      ),\n\n    ResidentControllerImage: (data: any, params?: RequestParams) =>\n    this.request<Resident, any>(\n      `/api/resident/image`,\n      \"POST\",\n      params,\n      data,\n      BodyType.Json,\n      true\n    ),\n\n    ResidentControllerList: (\n      query?: {\n        select?: [];\n        order?: any;\n        where?: any;\n        skip?: number;\n        take?: number;\n      },\n      params?: RequestParams\n    ) =>\n      this.request<ResidentPagingResult, any>(\n        `/api/users${this.addQueryParams(query)}`,\n        \"GET\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_getAll\n     * @request GET:/api/resident/all\n     * @secure\n     */\n    ResidentControllerGetAll: (\n      query?: { select?: []; order?: any; where?: any },\n      params?: RequestParams\n    ) =>\n      this.request<Resident[], any>(\n        `/api/resident/all${this.addQueryParams(query)}`,\n        \"GET\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_findOne\n     * @request GET:/api/resident/findOne\n     * @secure\n     */\n    ResidentControllerFindOne: (\n      query?: { select?: []; order?: any; where?: any },\n      params?: RequestParams\n    ) =>\n      this.request<Resident, any>(\n        `/api/resident/findOne${this.addQueryParams(query)}`,\n        \"GET\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_findById\n     * @request GET:/api/resident/{id}\n     * @secure\n     */\n    ResidentControllerFindById: (id: string, params?: RequestParams) =>\n      this.request<Resident, any>(\n        `/api/resident/${id}`,\n        \"GET\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_update\n     * @request PUT:/api/resident/{id}\n     * @secure\n     */\n    ResidentControllerUpdate: (\n      id: string,\n      data: Resident,\n      params?: RequestParams\n    ) =>\n      this.request<Resident, any>(\n        `/api/resident/${id}`,\n        \"PUT\",\n        params,\n        data,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_deleteById\n     * @request DELETE:/api/resident/{id}\n     * @secure\n     */\n    ResidentControllerDeleteById: (id: string, params?: RequestParams) =>\n      this.request<boolean, any>(\n        `/api/resident/${id}`,\n        \"DELETE\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n\n    //// r1\n\n\n\n    Resident1ControllerCreate: (data: Resident, params?: RequestParams) =>\n      this.request<Resident, any>(\n        `/api/resident1/`,\n        \"POST\",\n        params,\n        data,\n        BodyType.Json,\n        true\n      ),\n\n    Resident1ControllerImage: (data: any, params?: RequestParams) =>\n    this.request<Resident, any>(\n      `/api/resident1/image`,\n      \"POST\",\n      params,\n      data,\n      BodyType.Json,\n      true\n    ),\n\n    Resident1ControllerList: (\n      query?: {\n        select?: [];\n        order?: any;\n        where?: any;\n        skip?: number;\n        take?: number;\n      },\n      params?: RequestParams\n    ) =>\n      this.request<ResidentPagingResult, any>(\n        `/api/users${this.addQueryParams(query)}`,\n        \"GET\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_getAll\n     * @request GET:/api/resident/all\n     * @secure\n     */\n    Resident1ControllerGetAll: (\n      query?: { select?: []; order?: any; where?: any },\n      params?: RequestParams\n    ) =>\n      this.request<Resident[], any>(\n        `/api/resident1/all${this.addQueryParams(query)}`,\n        \"GET\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_findOne\n     * @request GET:/api/resident/findOne\n     * @secure\n     */\n    Resident1ControllerFindOne: (\n      query?: { select?: []; order?: any; where?: any },\n      params?: RequestParams\n    ) =>\n      this.request<Resident, any>(\n        `/api/resident1/findOne${this.addQueryParams(query)}`,\n        \"GET\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_findById\n     * @request GET:/api/resident/{id}\n     * @secure\n     */\n    Resident1ControllerFindById: (id: string, params?: RequestParams) =>\n      this.request<Resident, any>(\n        `/api/resident1/${id}`,\n        \"GET\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_update\n     * @request PUT:/api/resident/{id}\n     * @secure\n     */\n    Resident1ControllerUpdate: (\n      id: string,\n      data: Resident,\n      params?: RequestParams\n    ) =>\n      this.request<Resident, any>(\n        `/api/resident1/${id}`,\n        \"PUT\",\n        params,\n        data,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_deleteById\n     * @request DELETE:/api/resident/{id}\n     * @secure\n     */\n    Resident1ControllerDeleteById: (id: string, params?: RequestParams) =>\n      this.request<boolean, any>(\n        `/api/resident1/${id}`,\n        \"DELETE\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n\n    ////2 \n    Resident2ControllerCreate: (data: Resident, params?: RequestParams) =>\n      this.request<Resident, any>(\n        `/api/resident2/`,\n        \"POST\",\n        params,\n        data,\n        BodyType.Json,\n        true\n      ),\n\n    Resident2ControllerImage: (data: any, params?: RequestParams) =>\n    this.request<Resident, any>(\n      `/api/resident2/image`,\n      \"POST\",\n      params,\n      data,\n      BodyType.Json,\n      true\n    ),\n\n    Resident2ControllerList: (\n      query?: {\n        select?: [];\n        order?: any;\n        where?: any;\n        skip?: number;\n        take?: number;\n      },\n      params?: RequestParams\n    ) =>\n      this.request<ResidentPagingResult, any>(\n        `/api/users2${this.addQueryParams(query)}`,\n        \"GET\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_getAll\n     * @request GET:/api/resident/all\n     * @secure\n     */\n    Resident2ControllerGetAll: (\n      query?: { select?: []; order?: any; where?: any },\n      params?: RequestParams\n    ) =>\n      this.request<Resident[], any>(\n        `/api/resident/all${this.addQueryParams(query)}`,\n        \"GET\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_findOne\n     * @request GET:/api/resident/findOne\n     * @secure\n     */\n    Resident2ControllerFindOne: (\n      query?: { select?: []; order?: any; where?: any },\n      params?: RequestParams\n    ) =>\n      this.request<Resident, any>(\n        `/api/resident/findOne${this.addQueryParams(query)}`,\n        \"GET\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_findById\n     * @request GET:/api/resident/{id}\n     * @secure\n     */\n    Resident2ControllerFindById: (id: string, params?: RequestParams) =>\n      this.request<Resident, any>(\n        `/api/resident/${id}`,\n        \"GET\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_update\n     * @request PUT:/api/resident/{id}\n     * @secure\n     */\n    Resident2ControllerUpdate: (\n      id: string,\n      data: Resident,\n      params?: RequestParams\n    ) =>\n      this.request<Resident, any>(\n        `/api/resident/${id}`,\n        \"PUT\",\n        params,\n        data,\n        BodyType.Json,\n        true\n      ),\n\n    /**\n     * @tags users\n     * @name ResidentController_deleteById\n     * @request DELETE:/api/resident/{id}\n     * @secure\n     */\n    Resident2ControllerDeleteById: (id: string, params?: RequestParams) =>\n      this.request<boolean, any>(\n        `/api/resident/${id}`,\n        \"DELETE\",\n        params,\n        null,\n        BodyType.Json,\n        true\n      ),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}