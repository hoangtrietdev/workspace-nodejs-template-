{"ast":null,"code":"import { message } from 'antd';\nconst errorMessages = {\n  401: 'Please relogin to perform this action'\n};\nexport const interceptResponse = async ({\n  response\n}) => {\n  var _response$headers$get;\n\n  let result;\n\n  if ((_response$headers$get = response.headers.get('content-type')) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes('application/json')) {\n    result = await response.json();\n  }\n\n  if (response.ok) {\n    response.data = result;\n  } else {\n    var _ref, _ref2, _result$error, _result, _result2, _result$message, _result3;\n\n    const errMsg = (_ref = (_ref2 = (_result$error = (_result = result) === null || _result === void 0 ? void 0 : _result.error) !== null && _result$error !== void 0 ? _result$error : (_result2 = result) === null || _result2 === void 0 ? void 0 : _result2.message) !== null && _ref2 !== void 0 ? _ref2 : errorMessages[response.status]) !== null && _ref !== void 0 ? _ref : response.statusText;\n    const error = new Error(errMsg);\n    response.error = error;\n    message.error((_result$message = (_result3 = result) === null || _result3 === void 0 ? void 0 : _result3.message) !== null && _result$message !== void 0 ? _result$message : response.statusText);\n  }\n\n  return response;\n};","map":{"version":3,"sources":["/Users/abc/Desktop/templateworkspace/packages/client/src/services/base/interceptors.ts"],"names":["message","errorMessages","interceptResponse","response","result","headers","get","includes","json","ok","data","errMsg","error","status","statusText","Error"],"mappings":"AAAA,SAASA,OAAT,QAAwB,MAAxB;AAUA,MAAMC,aAAqC,GAAG;AAC5C,OAAK;AADuC,CAA9C;AAIA,OAAO,MAAMC,iBAAiB,GAAG,OAAgB;AAAEC,EAAAA;AAAF,CAAhB,KAAuD;AAAA;;AACtF,MAAIC,MAAJ;;AACA,+BAAID,QAAQ,CAACE,OAAT,CAAiBC,GAAjB,CAAqB,cAArB,CAAJ,0DAAI,sBAAsCC,QAAtC,CAA+C,kBAA/C,CAAJ,EAAwE;AACtEH,IAAAA,MAAM,GAAG,MAAMD,QAAQ,CAACK,IAAT,EAAf;AACD;;AAED,MAAIL,QAAQ,CAACM,EAAb,EAAiB;AACfN,IAAAA,QAAQ,CAACO,IAAT,GAAgBN,MAAhB;AACD,GAFD,MAEO;AAAA;;AACL,UAAMO,MAAM,gDACVP,MADU,4CACV,QAAQQ,KADE,qEACOR,MADP,6CACO,SAAQJ,OADf,yCAC0BC,aAAa,CAACE,QAAQ,CAACU,MAAV,CADvC,uCAC4DV,QAAQ,CAACW,UADjF;AAEA,UAAMF,KAAK,GAAG,IAAIG,KAAJ,CAAUJ,MAAV,CAAd;AACAR,IAAAA,QAAQ,CAACS,KAAT,GAAiBA,KAAjB;AAEAZ,IAAAA,OAAO,CAACY,KAAR,gCAAcR,MAAd,6CAAc,SAAQJ,OAAtB,6DAAiCG,QAAQ,CAACW,UAA1C;AACD;;AAED,SAAOX,QAAP;AACD,CAlBM","sourcesContent":["import { message } from 'antd';\nimport { Res as HttpRes } from 'use-http';\n\n\nexport type Res<T> = HttpRes<T> & {\n  error?: Error;\n};\n\n\n\nconst errorMessages: Record<number, string> = {\n  401: 'Please relogin to perform this action',\n};\n\nexport const interceptResponse = async <T = any>({ response }: { response: Res<T> }) => {\n  let result;\n  if (response.headers.get('content-type')?.includes('application/json')) {\n    result = await response.json();\n  }\n\n  if (response.ok) {\n    response.data = result;\n  } else {\n    const errMsg =\n      result?.error ?? result?.message ?? errorMessages[response.status] ?? response.statusText;\n    const error = new Error(errMsg);\n    response.error = error;\n\n    message.error(result?.message ?? response.statusText);\n  }\n\n  return response;\n};\n"]},"metadata":{},"sourceType":"module"}