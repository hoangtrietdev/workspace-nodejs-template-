{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/modal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, message, Modal } from \"antd\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { selectedResidentState, showResidentModalState } from \"./states\";\nimport ResidencesService from \"../../services/resident\";\nimport ResidentForm from \"./form\";\nimport { useResidencesContext } from \"./context\";\nimport client from \"../../services/base/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResidentModal = () => {\n  _s();\n\n  const {\n    list\n  } = useResidencesContext();\n  const {\n    fetch\n  } = list;\n  const [showModal, setShowModal] = useRecoilState(showResidentModalState);\n  const selectedResident = useRecoilValue(selectedResidentState);\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const title = selectedResident ? \"Sửa thông tin\" : \"Tạo mới\";\n\n  const handleSubmit = async () => {\n    form.validateFields().then(value => {\n      if (title === \"Sửa thông tin\") {\n        setLoading(true);\n        console.log(value);\n        return client.api.ResidentControllerUpdate(value.id, value);\n      }\n\n      setLoading(true);\n      return ResidencesService.create(value);\n    }, err => {\n      message.error(err.errorFields[0].errors[0]);\n    }).then(async res => {\n      setLoading(false);\n\n      if (res && res.ok) {\n        console.log(res);\n        message.success(`${title} thành công`);\n        setShowModal(false);\n        fetch();\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: title,\n    width: 1200,\n    visible: showModal,\n    closable: true,\n    onCancel: handleClose,\n    onOk: handleSubmit,\n    okButtonProps: {\n      loading\n    },\n    children: /*#__PURE__*/_jsxDEV(ResidentForm, {\n      form: form,\n      obj: selectedResident\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResidentModal, \"5h51IdA+AeudCVT9NxrAcZ+yPHU=\", false, function () {\n  return [useResidencesContext, useRecoilState, useRecoilValue, Form.useForm];\n});\n\n_c = ResidentModal;\nexport default ResidentModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResidentModal\");","map":{"version":3,"sources":["/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/modal.tsx"],"names":["React","useState","Form","message","Modal","useRecoilState","useRecoilValue","selectedResidentState","showResidentModalState","ResidencesService","ResidentForm","useResidencesContext","client","ResidentModal","list","fetch","showModal","setShowModal","selectedResident","loading","setLoading","form","useForm","handleClose","title","handleSubmit","validateFields","then","value","console","log","api","ResidentControllerUpdate","id","create","err","error","errorFields","errors","res","ok","success"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,KAAxB,QAAqC,MAArC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,QAA/C;AACA,SAASC,qBAAT,EAAgCC,sBAAhC,QAA8D,UAA9D;AAEA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,OAAOC,YAAP,MAAyB,QAAzB;AACA,SAASC,oBAAT,QAAqC,WAArC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;AAEA,MAAMC,aAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAWH,oBAAoB,EAArC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYD,IAAlB;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BZ,cAAc,CAACG,sBAAD,CAAhD;AACA,QAAMU,gBAAgB,GAAGZ,cAAc,CAACC,qBAAD,CAAvC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACoB,IAAD,IAASnB,IAAI,CAACoB,OAAL,EAAf;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAFD;;AAIA,QAAMO,KAAK,GAAGN,gBAAgB,GAAG,eAAH,GAAqB,SAAnD;;AAEA,QAAMO,YAAY,GAAG,YAAY;AAC/BJ,IAAAA,IAAI,CACDK,cADH,GAEGC,IAFH,CAGMC,KAAD,IAAW;AACV,UAAIJ,KAAK,KAAK,eAAd,EAA+B;AAC7BJ,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,eAAOhB,MAAM,CAACmB,GAAP,CAAWC,wBAAX,CAAoCJ,KAAK,CAACK,EAA1C,EAA8CL,KAA9C,CAAP;AACD;;AACDR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,aAAOX,iBAAiB,CAACyB,MAAlB,CAAyBN,KAAzB,CAAP;AACD,KAXL,EAYKO,GAAD,IAAS;AACPhC,MAAAA,OAAO,CAACiC,KAAR,CAAcD,GAAG,CAACE,WAAJ,CAAgB,CAAhB,EAAmBC,MAAnB,CAA0B,CAA1B,CAAd;AACD,KAdL,EAgBGX,IAhBH,CAgBQ,MAAOY,GAAP,IAAe;AACnBnB,MAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,UAAImB,GAAG,IAAIA,GAAG,CAACC,EAAf,EAAmB;AACjBX,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACApC,QAAAA,OAAO,CAACsC,OAAR,CAAiB,GAAEjB,KAAM,aAAzB;AACAP,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,QAAAA,KAAK;AACN;AACF,KAxBH;AAyBD,GA1BD;;AA4BA,sBACE,QAAC,KAAD;AACE,IAAA,KAAK,EAAES,KADT;AAEE,IAAA,KAAK,EAAE,IAFT;AAGE,IAAA,OAAO,EAAER,SAHX;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,QAAQ,EAAEO,WALZ;AAME,IAAA,IAAI,EAAEE,YANR;AAOE,IAAA,aAAa,EAAE;AAAEN,MAAAA;AAAF,KAPjB;AAAA,2BASE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEE,IAApB;AAA0B,MAAA,GAAG,EAAEH;AAA/B;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvDD;;GAAML,a;UACaF,oB,EAEiBN,c,EACTC,c,EAEVJ,IAAI,CAACoB,O;;;KANhBT,a;AAyDN,eAAeA,aAAf","sourcesContent":["import React, { FC, useState } from \"react\";\nimport { Form, message, Modal } from \"antd\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { selectedResidentState, showResidentModalState } from \"./states\";\nimport { Resident } from \"../../services/resident/model\";\nimport ResidencesService from \"../../services/resident\";\nimport ResidentForm from \"./form\";\nimport { useResidencesContext } from \"./context\";\nimport client from \"../../services/base/client\";\n\nconst ResidentModal: FC = () => {\n  const { list } = useResidencesContext();\n  const { fetch } = list;\n  const [showModal, setShowModal] = useRecoilState(showResidentModalState);\n  const selectedResident = useRecoilValue(selectedResidentState);\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const title = selectedResident ? \"Sửa thông tin\" : \"Tạo mới\";\n\n  const handleSubmit = async () => {\n    form\n      .validateFields()\n      .then(\n         (value) => {\n          if (title === \"Sửa thông tin\") {\n            setLoading(true);\n            console.log(value);\n            return client.api.ResidentControllerUpdate(value.id, value);\n          }\n          setLoading(true);\n          return ResidencesService.create(value as Resident);\n        },\n        (err) => {\n          message.error(err.errorFields[0].errors[0]);\n        }\n      )\n      .then(async (res) => {\n        setLoading(false);\n        if (res && res.ok) {\n          console.log(res);\n          message.success(`${title} thành công`);\n          setShowModal(false);\n          fetch();\n        }\n      });\n  };\n\n  return (\n    <Modal\n      title={title}\n      width={1200}\n      visible={showModal}\n      closable\n      onCancel={handleClose}\n      onOk={handleSubmit}\n      okButtonProps={{ loading }}\n    >\n      <ResidentForm form={form} obj={selectedResident} />\n    </Modal>\n  );\n};\n\nexport default ResidentModal;\n"]},"metadata":{},"sourceType":"module"}