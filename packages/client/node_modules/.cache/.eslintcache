[{"/Users/abc/Desktop/templateworkspace/packages/client/src/index.tsx":"1","/Users/abc/Desktop/templateworkspace/packages/client/src/reportWebVitals.ts":"2","/Users/abc/Desktop/templateworkspace/packages/client/src/components/app/index.ts":"3","/Users/abc/Desktop/templateworkspace/packages/client/src/components/app/app.tsx":"4","/Users/abc/Desktop/templateworkspace/packages/client/src/routes/index.ts":"5","/Users/abc/Desktop/templateworkspace/packages/client/src/assets/styles/index.ts":"6","/Users/abc/Desktop/templateworkspace/packages/client/src/routes/routes.tsx":"7","/Users/abc/Desktop/templateworkspace/packages/client/src/routes/router.tsx":"8","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/about-me/lazy.ts":"9","/Users/abc/Desktop/templateworkspace/packages/client/src/components/ui/loading.tsx":"10","/Users/abc/Desktop/templateworkspace/packages/client/src/components/layout/index.ts":"11","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/about-me/about-me.tsx":"12","/Users/abc/Desktop/templateworkspace/packages/client/src/components/ui/flex-center.tsx":"13","/Users/abc/Desktop/templateworkspace/packages/client/src/components/layout/layout.tsx":"14","/Users/abc/Desktop/templateworkspace/packages/client/src/components/layout/preview-images/index.ts":"15","/Users/abc/Desktop/templateworkspace/packages/client/src/components/layout/sider/sider.tsx":"16","/Users/abc/Desktop/templateworkspace/packages/client/src/components/layout/header/index.ts":"17","/Users/abc/Desktop/templateworkspace/packages/client/src/components/layout/preview-images/preview-images.tsx":"18","/Users/abc/Desktop/templateworkspace/packages/client/src/components/layout/header/header.tsx":"19","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/lazy.ts":"20","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/residence.tsx":"21","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/actions.tsx":"22","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/context.tsx":"23","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/states.ts":"24","/Users/abc/Desktop/templateworkspace/packages/client/src/services/resident/index.ts":"25","/Users/abc/Desktop/templateworkspace/packages/client/src/services/resident/resident.service.ts":"26","/Users/abc/Desktop/templateworkspace/packages/client/src/services/base/paginate.ts":"27","/Users/abc/Desktop/templateworkspace/packages/client/src/services/base/fetch.ts":"28","/Users/abc/Desktop/templateworkspace/packages/client/src/services/base/interceptors.ts":"29","/Users/abc/Desktop/templateworkspace/packages/client/src/utils/dayjs.ts":"30","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/modal.tsx":"31","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/form.tsx":"32","/Users/abc/Desktop/templateworkspace/packages/client/src/services/base/client.ts":"33","/Users/abc/Desktop/templateworkspace/packages/client/src/services/base/request.ts":"34","/Users/abc/Desktop/templateworkspace/packages/client/src/services/base/filter.ts":"35","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/page.tsx":"36","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/index.ts":"37","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/residence1.tsx":"38","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/states.ts":"39","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/actions.tsx":"40","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/modal.tsx":"41","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/context.tsx":"42","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/form.tsx":"43","/Users/abc/Desktop/templateworkspace/packages/client/src/services/resident1/resident1.service.ts":"44","/Users/abc/Desktop/templateworkspace/packages/client/src/services/resident1/index.ts":"45","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/lazy.ts":"46","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/page.tsx":"47","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/lazy.ts":"48","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/page.tsx":"49","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/context.tsx":"50","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/residence.tsx":"51","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/states.ts":"52","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/actions.tsx":"53","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/modal.tsx":"54","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/form.tsx":"55","/Users/abc/Desktop/templateworkspace/packages/client/src/services/resident2/index.ts":"56","/Users/abc/Desktop/templateworkspace/packages/client/src/services/resident2/resident2.service.ts":"57","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/index.ts":"58","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/login/lazy.ts":"59","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/login/login.tsx":"60"},{"size":491,"mtime":1624027251898,"results":"61","hashOfConfig":"62"},{"size":425,"mtime":1624027251902,"results":"63","hashOfConfig":"62"},{"size":46,"mtime":1624027251892,"results":"64","hashOfConfig":"62"},{"size":348,"mtime":1624027251892,"results":"65","hashOfConfig":"62"},{"size":112,"mtime":1624027251902,"results":"66","hashOfConfig":"62"},{"size":22,"mtime":1624027251890,"results":"67","hashOfConfig":"62"},{"size":2213,"mtime":1626970009679,"results":"68","hashOfConfig":"62"},{"size":1009,"mtime":1626970183795,"results":"69","hashOfConfig":"62"},{"size":82,"mtime":1624027251900,"results":"70","hashOfConfig":"62"},{"size":387,"mtime":1624027251898,"results":"71","hashOfConfig":"62"},{"size":55,"mtime":1624027251893,"results":"72","hashOfConfig":"62"},{"size":1215,"mtime":1624029914975,"results":"73","hashOfConfig":"62"},{"size":221,"mtime":1624027251897,"results":"74","hashOfConfig":"62"},{"size":553,"mtime":1624027251895,"results":"75","hashOfConfig":"62"},{"size":75,"mtime":1624027251895,"results":"76","hashOfConfig":"62"},{"size":2425,"mtime":1624029602397,"results":"77","hashOfConfig":"62"},{"size":55,"mtime":1624027251893,"results":"78","hashOfConfig":"62"},{"size":605,"mtime":1624029061874,"results":"79","hashOfConfig":"62"},{"size":330,"mtime":1624029368580,"results":"80","hashOfConfig":"62"},{"size":79,"mtime":1626792021681,"results":"81","hashOfConfig":"62"},{"size":7379,"mtime":1626965896972,"results":"82","hashOfConfig":"62"},{"size":1511,"mtime":1626792060183,"results":"83","hashOfConfig":"62"},{"size":872,"mtime":1626792971227,"results":"84","hashOfConfig":"62"},{"size":326,"mtime":1624421550652,"results":"85","hashOfConfig":"62"},{"size":128,"mtime":1624032109539,"results":"86","hashOfConfig":"62"},{"size":1215,"mtime":1626966769356,"results":"87","hashOfConfig":"62"},{"size":2950,"mtime":1626792962110,"results":"88","hashOfConfig":"62"},{"size":1415,"mtime":1624031844418,"results":"89","hashOfConfig":"62"},{"size":1006,"mtime":1626789255437,"results":"90","hashOfConfig":"62"},{"size":241,"mtime":1624418430047,"results":"91","hashOfConfig":"62"},{"size":2036,"mtime":1626880946070,"results":"92","hashOfConfig":"62"},{"size":6631,"mtime":1626964483479,"results":"93","hashOfConfig":"62"},{"size":683,"mtime":1626789203933,"results":"94","hashOfConfig":"62"},{"size":37217,"mtime":1626967122422,"results":"95","hashOfConfig":"62"},{"size":2790,"mtime":1626790247876,"results":"96","hashOfConfig":"62"},{"size":352,"mtime":1626791515405,"results":"97","hashOfConfig":"62"},{"size":81,"mtime":1626966716968,"results":"98","hashOfConfig":"62"},{"size":6462,"mtime":1626969206962,"results":"99","hashOfConfig":"62"},{"size":332,"mtime":1626967552270,"results":"100","hashOfConfig":"62"},{"size":1522,"mtime":1626968022280,"results":"101","hashOfConfig":"62"},{"size":2046,"mtime":1626968011246,"results":"102","hashOfConfig":"62"},{"size":920,"mtime":1626968071638,"results":"103","hashOfConfig":"62"},{"size":5922,"mtime":1626969282086,"results":"104","hashOfConfig":"62"},{"size":1222,"mtime":1626968065398,"results":"105","hashOfConfig":"62"},{"size":132,"mtime":1626967855662,"results":"106","hashOfConfig":"62"},{"size":79,"mtime":1626967378013,"results":"107","hashOfConfig":"62"},{"size":360,"mtime":1626968115856,"results":"108","hashOfConfig":"62"},{"size":79,"mtime":1626966460592,"results":"109","hashOfConfig":"62"},{"size":352,"mtime":1626966460593,"results":"110","hashOfConfig":"62"},{"size":876,"mtime":1626968443279,"results":"111","hashOfConfig":"62"},{"size":7207,"mtime":1626969447379,"results":"112","hashOfConfig":"62"},{"size":328,"mtime":1626968392050,"results":"113","hashOfConfig":"62"},{"size":1514,"mtime":1626968326869,"results":"114","hashOfConfig":"62"},{"size":2040,"mtime":1626968406742,"results":"115","hashOfConfig":"62"},{"size":6338,"mtime":1626969261272,"results":"116","hashOfConfig":"62"},{"size":132,"mtime":1626968244370,"results":"117","hashOfConfig":"62"},{"size":1221,"mtime":1626968204025,"results":"118","hashOfConfig":"62"},{"size":78,"mtime":1624029997007,"results":"119","hashOfConfig":"62"},{"size":80,"mtime":1626969600552,"results":"120","hashOfConfig":"62"},{"size":892,"mtime":1626969820531,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"17342l2",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"124"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"124"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"124"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"124"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"124"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"124"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"/Users/abc/Desktop/templateworkspace/packages/client/src/index.tsx",[],["259","260"],"/Users/abc/Desktop/templateworkspace/packages/client/src/reportWebVitals.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/components/app/index.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/components/app/app.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/routes/index.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/assets/styles/index.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/routes/routes.tsx",["261","262","263","264","265","266"],"/Users/abc/Desktop/templateworkspace/packages/client/src/routes/router.tsx",["267"],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/about-me/lazy.ts",[],["268","269"],"/Users/abc/Desktop/templateworkspace/packages/client/src/components/ui/loading.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/components/layout/index.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/about-me/about-me.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/components/ui/flex-center.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/components/layout/layout.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/components/layout/preview-images/index.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/components/layout/sider/sider.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/components/layout/header/index.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/components/layout/preview-images/preview-images.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/components/layout/header/header.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/lazy.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/residence.tsx",["270","271","272","273","274","275","276","277","278","279","280"],"import {\n  LockOutlined,\n  PlusOutlined,\n  ReloadOutlined,\n  UnlockTwoTone,\n} from \"@ant-design/icons\";\nimport {\n  Image,\n  Button,\n  Card,\n  Checkbox,\n  Col,\n  Descriptions,\n  Divider,\n  Row,\n  Typography,\n  Input,\n} from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport Table, { ColumnProps, TableProps } from \"antd/lib/table\";\nimport { SorterResult } from \"antd/lib/table/interface\";\nimport React, { FC } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport PreviewImage from \"../../components/layout/preview-images\";\nimport { FilterOrderOptions, OrderDirection } from \"../../services/base/filter\";\nimport { useResidentsList } from \"../../services/resident\";\nimport { Resident } from \"../../services/resident/model\";\nimport dayjs from \"../../utils/dayjs\";\nimport ResidentListAction from \"./actions\";\nimport { useResidencesContext } from \"./context\";\nimport ResidentModal from \"./modal\";\nimport { selectedResidentState, showResidentModalState } from \"./states\";\n\nexport const PAGING_PAGE_SIZE = 10;\n\nconst columns: Array<ColumnProps<Resident>> = [\n  {\n    title: \"Hình ảnh\",\n    dataIndex: \"image\",\n    key: \"image\",\n    align: \"center\",\n    render: (data: string, item) => {\n      if (data !== null && data.includes(\".png\")) {\n        const logo = require(`./images/${data}`);\n        return <Image src={logo.default} />;\n      }\n    },\n    width: 100,\n  },\n  {\n    title: \"Họ và Tên\",\n    dataIndex: \"ho_ten\",\n    key: \"ho_ten\",\n  },\n  {\n    title: \"Tuổi\",\n    dataIndex: \"age\",\n    key: \"age\",\n  },\n  {\n    title: \"SHSQ\",\n    dataIndex: \"shsq\",\n    key: \"shsq\",\n  },\n  {\n    title: \"Năm Sinh\",\n    dataIndex: \"nam_sinh\",\n    key: \"nam_sinh\",\n    render: (value) => {\n      if (value === null || value === undefined) {\n        return dayjs(\"2000-02-02T00:00:00.000Z\").format(\"DD/MM/YYYY\");\n      } else {\n        return dayjs(value).format(\"DD/MM/YYYY\");\n      }\n    },\n  },\n  {\n    title: \"Quê Quán\",\n    dataIndex: \"que_quan\",\n    key: \"que_quan\",\n  },\n  {\n    title: \"Trú Quán\",\n    dataIndex: \"tru_quan\",\n    key: \"tru_quan\",\n  },\n  {\n    title: \"Địa Chỉ\",\n    dataIndex: \"dia_chi\",\n    key: \"dia_chi\",\n  },\n  {\n    title: \"Văn Hoá\",\n    dataIndex: \"van_hoa\",\n    key: \"van_hoa\",\n  },\n  {\n    title: \"Dân Tộc\",\n    dataIndex: \"dan_toc\",\n    key: \"dan_toc\",\n  },\n  {\n    title: \"Đoàn Viên\",\n    dataIndex: \"doan_vien\",\n    key: \"doan_vien\",\n    render: (data, item) => <Checkbox checked={data} />,\n  },\n  {\n    title: \"Đảng\",\n    dataIndex: \"dang\",\n    key: \"dang\",\n    render: (data, item) => <Checkbox checked={data} />,\n  },\n  {\n    title: \"Ngày Vào Đảng\",\n    dataIndex: \"ngay_vao_dang\",\n    key: \"ngay_vao_dang\",\n    render: (value) => {\n      if (value === null || value === undefined) {\n        return dayjs(\"2000-02-02T00:00:00.000Z\").format(\"DD/MM/YYYY\");\n      } else {\n        return dayjs(value).format(\"DD/MM/YYYY\");\n      }\n    },\n  },\n  {\n    title: \"Tôn Giáo\",\n    dataIndex: \"ton_giao\",\n    key: \"ton_giao\",\n  },\n  {\n    title: \"Sức Khoẻ\",\n    dataIndex: \"suc_khoe\",\n    key: \"suc_khoe\",\n  },\n  {\n    title: \"Nghề Nghiệp\",\n    dataIndex: \"nghe_nghiep\",\n    key: \"nghe_nghiep\",\n  },\n  {\n    title: \"Nơi Làm Việc\",\n    dataIndex: \"noi_lam_viec\",\n    key: \"noi_lam_viec\",\n  },\n  {\n    title: \"Số Điện Thoại\",\n    dataIndex: \"so_dien_thoai\",\n    key: \"so_dien_thoai\",\n  },\n  // {\n  //   title: \"Họ Tên Cha\",\n  //   dataIndex: \"ho_ten_cha\",\n  //   key: \"ho_ten_cha\",\n  // },\n  // {\n  //   title: \"Họ Tên Mẹ\",\n  //   dataIndex: \"ho_ten_me\",\n  //   key: \"ho_ten_me\",\n  // },\n  // {\n  //   title: \"Họ Tên Vợ\",\n  //   dataIndex: \"ho_ten_vo\",\n  //   key: \"ho_ten_vo\",\n  // },\n  // {\n  //   title: \"Số con\",\n  //   dataIndex: \"so_con\",\n  //   key: \"so_con\",\n  // },\n  // {\n  //   title: \"Thành Phần Xuất Thân\",\n  //   dataIndex: \"thanh_phan_xuat_than\",\n  //   key: \"thanh_phan_xuat_than\",\n  // },\n  {\n    title: \"Nhập Ngũ\",\n    dataIndex: \"nhap_ngu\",\n    key: \"nhap_ngu\",\n    render: (value) => {\n      if (value === null || value === undefined) {\n        return dayjs(\"2000-02-02T00:00:00.000Z\").format(\"DD/MM/YYYY\");\n      } else {\n        return dayjs(value).format(\"DD/MM/YYYY\");\n      }\n    },\n  },\n  {\n    title: \"Xuất Ngũ\",\n    dataIndex: \"xuat_ngu\",\n    key: \"xuat_ngu\",\n    render: (value) => {\n      if (value === null || value === undefined) {\n        return dayjs(\"2000-02-02T00:00:00.000Z\").format(\"DD/MM/YYYY\");\n      } else {\n        return dayjs(value).format(\"DD/MM/YYYY\");\n      }\n    },\n  },\n  {\n    title: \"Tên Đơn Vị\",\n    dataIndex: \"ten_don_vi\",\n    key: \"ten_don_vi\",\n  },\n  {\n    title: \"Cấp Bậc\",\n    dataIndex: \"cap_bac\",\n    key: \"cap_bac\",\n  },\n  {\n    title: \"Chức Vụ\",\n    dataIndex: \"chuc_vu\",\n    key: \"chuc_vu\",\n  },\n  // {\n  //   title: \"Ghi Chú\",\n  //   dataIndex: \"ghi_chu\",\n  //   key: \"ghi_chu\",\n  // },\n  {\n    title: \"\",\n    dataIndex: \"\",\n    key: \"action\",\n    render: (value, resident) => <ResidentListAction resident={resident} />,\n    width: 85,\n    align: \"right\",\n  },\n];\n\nconst ResidenceList: FC = () => {\n  const { list } = useResidencesContext();\n  const { data, total, setSkip, setTake, setOrder, setWhere, fetch } = list;\n\n  const setShowForm = useSetRecoilState(showResidentModalState);\n  const setSelectedResident = useSetRecoilState(selectedResidentState);\n\n  const handleAdd = () => {\n    setShowForm(true);\n    setSelectedResident(undefined);\n  };\n\n  const onSearch = (value: string) => {\n    if (value) {\n      {\n        setWhere({ ho_ten: value });\n      }\n    } else {\n      setWhere({});\n    }\n  };\n\n  const handleTableChange: TableProps<Resident>[\"onChange\"] = (\n    pageData,\n    _,\n    sorter\n  ) => {\n    const { current, pageSize } = pageData;\n    const currentPage = (current as number) - 1;\n    setSkip(currentPage * (pageSize ?? PAGING_PAGE_SIZE));\n    setTake(pageSize);\n\n    const sortData = Array.isArray(sorter) ? sorter : [sorter];\n    const order = sortData.reduce<FilterOrderOptions>((all, item) => {\n      if (item.field && item.order) {\n        all[item.field as string] =\n          item.order === \"ascend\" ? OrderDirection.ASC : OrderDirection.DESC;\n      }\n      return all;\n    }, {});\n    setOrder(order);\n  };\n  return (\n    <div\n      className=\"site-card-wrapper h-screen\"\n      style={{ padding: 24, minHeight: 360 }}\n    >\n      <ResidentModal />\n      <Card bordered={false} bodyStyle={{ padding: 0 }}>\n        <div style={{ padding: \"1%\" }}>\n          <Typography.Title level={4}>\n            Danh sách\n            <span className=\"ml-auto\" style={{ marginLeft: \"90%\" }}>\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={handleAdd}\n              >\n                Add\n              </Button>\n              <ReloadOutlined onClick={fetch} />\n            </span>\n            <Search\n              className=\"ms-5\"\n              placeholder=\"Họ và tên\"\n              onSearch={onSearch}\n              style={{ width: 200 }}\n            />\n          </Typography.Title>\n        </div>\n        <Table\n          size=\"small\"\n          style={{ padding: \"1%\" }}\n          columns={columns}\n          rowKey=\"email\"\n          dataSource={data}\n          pagination={{ total }}\n          onChange={handleTableChange}\n        />\n      </Card>\n    </div>\n  );\n};\n\nexport default ResidenceList;\n","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/actions.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/context.tsx",["281","282","283"],"import React, {\n  createContext,\n  FC,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { UsePaginate } from \"../../services/base/paginate\";\nimport { useResidentsList } from \"../../services/resident\";\n\n\nimport { Resident } from \"../../services/resident/model\";\n\nexport type ResidentContext = {\n  list: UsePaginate<Resident>;\n};\n\nconst ResidentContext = createContext<ResidentContext | null>(null);\n\nexport const ResidentProvider: FC = ({ children }) => {\n  const list = useResidentsList();\n\n  return (\n    <ResidentContext.Provider value={{ list }}>\n      {children}\n    </ResidentContext.Provider>\n  );\n};\n\nexport const useResidencesContext = () => {\n  const context = useContext(ResidentContext);\n  if (!context) {\n    throw new Error(\"useResidencescontext must be used inside ResidentProvider\");\n  }\n\n  return context;\n};\n\nexport default ResidentProvider;\n","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/states.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/services/resident/index.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/services/resident/resident.service.ts",["284","285","286"],"import client from \"../base/client\";\nimport { get, post, put, deleted } from \"../base/fetch\";\nimport { FilterOrderOptions } from \"../base/filter\";\nimport { usePaginate } from \"../base/paginate\";\nimport { RequestParams } from \"../base/request\";\nimport { Resident } from \"./model\";\n\nexport const create = async (resident: Resident, params?: RequestParams) => {\n  return client.api.ResidentControllerCreate(resident, params);\n};\n\nexport const update = async (resident: Resident, params?: RequestParams) => {\n  return client.api.ResidentControllerUpdate(\n    resident.id.toString(),\n    resident,\n    params\n  );\n};\n\nexport const image = async (image: any) => {\n  return post(\"/api/resident/image\", {\n    image: image,\n  } as any);\n};\n\nexport const destroy = async (id: number) => {\n  return client.api.ResidentControllerDeleteById(id.toString());\n};\n\nexport const useResidentsList = (order?: FilterOrderOptions) => {\n  return usePaginate<Resident>(\"/api/resident\", { order });\n};\n\nexport const getResident = async (\n  query?: {\n    select?: [];\n    order?: any;\n    where?: any;\n    skip?: number;\n    take?: number;\n  },\n  params?: RequestParams\n) => {\n  return client.api.ResidentControllerGetAll(query, params);\n};\n","/Users/abc/Desktop/templateworkspace/packages/client/src/services/base/paginate.ts",["287"],"import { useEffect, useState } from \"react\";\nimport useFetch, { CachePolicies, IncomingOptions } from \"use-http\";\n\nimport { HttpResponse } from \"./request\";\n\nimport {\n  FilterOptions,\n  FilterOrderOptions,\n  FilterResult,\n  FilterWhereOptions,\n  UseFilter,\n} from \"./filter\";\n\nexport type RequestQueryParamsType = Record<string | number, any>;\n\nconst formatQueryParam = (query: RequestQueryParamsType, key: string) => {\n  let value: any = query[key];\n  if (Array.isArray(value)) {\n    value = value.join(',');\n  } else if (typeof value === 'object') {\n    value = JSON.stringify(value);\n  }\n  return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n};\n\nconst formatQueryParams = (rawQuery?: RequestQueryParamsType): string => {\n  const query = rawQuery || {};\n  const keys = Object.keys(query).filter((key) => typeof query[key] !== 'undefined');\n  return keys.length ? `?${keys.map((key) => formatQueryParam(query, key)).join('&')}` : '';\n};\n\nexport default formatQueryParams;\n\nexport const DEFAULT_PAGE_SIZE = 10;\n\nexport type UsePaginate<T> = UseFilter<T> & {\n  total: number;\n  skip: number;\n  take: number;\n  setSkip: (skip?: number) => void;\n  setTake: (take?: number) => void;\n};\n\nexport type PagingOptions<T = any> = FilterOptions<T> & {\n  skip?: number;\n  take?: number;\n};\n\nexport type PagingResult<T> = {\n  data: FilterResult<T>;\n  skip: number;\n  take: number;\n  total: number;\n};\n\nexport type PaginateRequestFunc<\n  T,\n  A extends PagingOptions<T> = PagingOptions<T>\n> = (args: A) => Promise<HttpResponse<PagingResult<T>, any>>;\n\nexport const usePaginate = <T>(\n  url: string,\n  options: PagingOptions<T> = {},\n  fetchOptions: IncomingOptions = {}\n): UsePaginate<T> => {\n  const [skip, _setSkip] = useState(options.skip ?? 0);\n  const [take, _setTake] = useState(options.take ?? DEFAULT_PAGE_SIZE);\n  const [order, setOrder] = useState<FilterOrderOptions<T>>(\n    options.order ?? {}\n  );\n  const [where, setWhere] = useState<FilterWhereOptions<T>>(\n    options.where ?? {}\n  );\n  const [refetch, setRefetch] = useState(0);\n\n  const baseUrl = process.env.REACT_APP_API_ENDPOINT ?? \"\";\n\n  const defaultData: PagingResult<T> = {\n    data: [],\n    skip,\n    take,\n    total: 0,\n  };\n\n  const {\n    get,\n    data = defaultData,\n    loading,\n    abort,\n  } = useFetch<PagingResult<T>>(baseUrl, {\n    cachePolicy: CachePolicies.NO_CACHE,\n    ...fetchOptions,\n  });\n\n  useEffect(() => {\n    const params: PagingOptions<T> = {\n      ...options,\n      skip,\n      take,\n      where,\n      order,\n    };\n    get(`${url}${formatQueryParams(params)}`);\n  }, [refetch, skip, take, order, where]);\n\n  const fetch = () => setRefetch(Date.now());\n  const setSkip = (current = 1) => _setSkip(current);\n  const setTake = (current = DEFAULT_PAGE_SIZE) => _setTake(current);\n\n  return {\n    data: data.data,\n    total: data.total,\n    loading,\n    skip,\n    take,\n    setSkip,\n    setTake,\n    setOrder,\n    setWhere,\n    fetch,\n    abort,\n  };\n};\n","/Users/abc/Desktop/templateworkspace/packages/client/src/services/base/fetch.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/services/base/interceptors.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/utils/dayjs.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/modal.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/form.tsx",["288","289","290","291","292","293","294","295","296","297","298","299","300","301"],"import React, { FC, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Input,\n  Image,\n  Select,\n  Switch,\n  Upload,\n  message,\n  DatePicker,\n  Col,\n  Row,\n} from \"antd\";\nimport { FormInstance } from \"antd/es/form\";\nimport { Resident } from \"../../services/resident/model\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { diskStorage } from \"multer\";\nimport ResidencesService from \"../../services/resident\";\nimport { post } from \"../../services/base/fetch\";\nimport moment from \"moment\";\nimport dayjs from \"../../utils/dayjs\";\nimport client from \"../../services/base/client\";\n\nconst RenderImage = (props: any) => {\n  if (props.image === null || props.image === undefined) {\n    return (\n      <Upload\n        name=\"image\"\n        listType=\"picture\"\n        action={\"/api/resident/image\"}\n        onChange={props.onChange}\n      >\n        <Button icon={<UploadOutlined />}>Click to upload</Button>\n      </Upload>\n    );\n  } else {\n    if (props.image.includes(\".png\")) {\n      return <Image src={require(`./images/${props.image}`).default} />;\n    } else {\n      return (\n        <Upload\n          name=\"image\"\n          listType=\"picture\"\n          action={\"/api/resident/image\"}\n          onChange={props.onChange}\n        >\n          <Button icon={<UploadOutlined />}>Click to upload</Button>\n        </Upload>\n      );\n    }\n  }\n};\n\nconst ResidentForm: FC<{ form: FormInstance; obj?: Resident }> = ({\n  form,\n  obj,\n}) => {\n  const [imagePath, setImagePath] = useState(\"\");\n\n  const onChange = (info: any) => {\n    if (info.file.status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === \"done\") {\n      message.success(`${info.file.name} file uploaded successfully`);\n      setImagePath(info.file.name);\n    } else if (info.file.status === \"error\") {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({ image: imagePath });\n  }, [imagePath]);\n\n  useEffect(() => {\n    if (obj) {\n      console.log(obj.ngay_vao_dang);\n      form.setFieldsValue(obj);\n      setImagePath(obj.image);\n    } else {\n      form.resetFields();\n    }\n  }, [obj]);\n\n  return (\n    <Form form={form} labelCol={{ flex: \"0 0 90px\" }}>\n      <Form.Item name=\"id\" hidden={true}>\n        <Input disabled={true} />\n      </Form.Item>\n      <Row gutter={24}>\n        <Col span={12}>\n          <RenderImage image={obj?.image} onChange={onChange} />\n          <Form.Item name=\"image\">\n            <Input value={imagePath} hidden />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            label=\"Họ Và Tên\"\n            name=\"ho_ten\"\n            rules={[{ required: true, message: \"Hãy nhập họ Và tên!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"SHSQ\" name=\"shsq\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Tuổi\"\n            name=\"age\"\n            rules={[{ required: true, message: \"Hãy nhập tuổi!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Năm sinh\"\n            name=\"nam_sinh\"\n            rules={[{ required: true, message: \"Hãy nhập năm sinh!\" }]}\n          >\n            <Input type=\"date\" />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Quê quán\"\n            name=\"que_quan\"\n            rules={[{ required: true, message: \"Hãy nhập quê quán!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Trú quán\"\n            name=\"tru_quan\"\n            rules={[{ required: true, message: \"Hãy nhập trú quán!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Địa chỉ\"\n            name=\"dia_chi\"\n            rules={[{ required: true, message: \"Hãy nhập địa chỉ!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Văn hoá\" name=\"van_hoa\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Đảng\" name=\"dang\">\n            {obj?.dang == true || obj?.dang == false ? (\n              <Switch defaultChecked={obj?.dang} />\n            ) : (\n              <Switch defaultChecked={false} />\n            )}\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Đoàn viên\" name=\"doan_vien\">\n            {obj?.doan_vien == true || obj?.doan_vien == false ? (\n              <Switch defaultChecked={obj?.doan_vien} />\n            ) : (\n              <Switch defaultChecked={false} />\n            )}\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Vào đảng\" name=\"ngay_vao_dang\">\n            <Input type=\"date\" />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Tôn giáo\" name=\"ton_giao\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Sức khoẻ\"\n            name=\"suc_khoe\"\n            rules={[{ required: true, message: \"Hãy nhập sức khoẻ!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Nơi làm việc\" name=\"noi_lam_viec\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"SĐT\" name=\"so_dien_thoai\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Nhập ngũ\" name=\"nhap_ngu\">\n            <Input type=\"date\" />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Xuất ngũ\" name=\"xuat_ngu\">\n            <Input type=\"date\" />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Tên đơn vị\" name=\"ten_don_vi\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Cấp bậc\" name=\"cap_bac\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Chức vụ\" name=\"chuc_vu\">\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default ResidentForm;\n","/Users/abc/Desktop/templateworkspace/packages/client/src/services/base/client.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/services/base/request.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/services/base/filter.ts",["302"],"import { useEffect, useState } from \"react\";\nimport useFetch, { CachePolicies, IncomingOptions } from \"use-http\";\n\nexport enum OrderDirection {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\nexport type RequestQueryParamsType = Record<string | number, any>;\n\nconst formatQueryParam = (query: RequestQueryParamsType, key: string) => {\n  let value: any = query[key];\n  if (Array.isArray(value)) {\n    value = value.join(\",\");\n  } else if (typeof value === \"object\") {\n    value = JSON.stringify(value);\n  }\n  return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n};\n\nconst formatQueryParams = (rawQuery?: RequestQueryParamsType): string => {\n  const query = rawQuery || {};\n  const keys = Object.keys(query).filter(\n    (key) => typeof query[key] !== \"undefined\"\n  );\n  return keys.length\n    ? `?${keys.map((key) => formatQueryParam(query, key)).join(\"&\")}`\n    : \"\";\n};\n\nexport default formatQueryParams;\n\nexport type FilterOrderOptions<T = any> = {\n  [field in Extract<keyof T, string>]?: OrderDirection;\n};\n\nexport type FilterStandardOperators<T> = {\n  in?: T[];\n  nin?: T[];\n};\n\nexport type FilterRangeOperators<T> = {\n  gt?: T;\n  gte?: T;\n  lt?: T;\n  lte?: T;\n};\n\ntype OperatorMap = {\n  string: FilterStandardOperators<string>;\n  number: FilterStandardOperators<number> & FilterRangeOperators<number>;\n};\n\nexport type FilterWhereOptions<T> = {\n  [k in keyof T]?: T[k] extends string\n    ? OperatorMap[\"string\"] | string\n    : T[k] extends number\n    ? OperatorMap[\"number\"] | number\n    : T[k];\n};\n\nexport type UseFilter<T> = {\n  data: T[];\n  error?: Error;\n  loading: boolean;\n  fetch: () => void;\n  abort: () => void;\n  setOrder: (order: FilterOrderOptions<T>) => void;\n  setWhere: (where: FilterWhereOptions<T>) => void;\n};\n\nexport type FilterOptions<T = any> = {\n  select?: any[] | undefined;\n  where?: FilterWhereOptions<T>;\n  order?: FilterOrderOptions<T>;\n};\n\nexport type FilterResult<T> = Array<T>;\n\nexport const useFilter = <T>(\n  url: string,\n  options: FilterOptions<T> = {},\n  fetchOptions: IncomingOptions = {}\n): UseFilter<T> => {\n  const [order, setOrder] = useState<FilterOrderOptions<T>>({});\n  const [where, setWhere] = useState<FilterWhereOptions<T>>({});\n  const [refetch, setRefetch] = useState(0);\n\n  const defaultData: FilterResult<T> = [];\n\n  const {\n    get,\n    data = defaultData,\n    error,\n    loading,\n    abort,\n  } = useFetch<FilterResult<T>>({\n    cachePolicy: CachePolicies.NO_CACHE,\n    ...fetchOptions,\n  });\n\n  useEffect(() => {\n    const params: FilterOptions<T> = {\n      ...options,\n      order,\n      where,\n    };\n\n    get(`${url}${formatQueryParams(params)}`);\n  }, [refetch, order, where]);\n\n  const fetch = () => setRefetch(Date.now());\n\n  return {\n    data,\n    error,\n    loading,\n    setOrder,\n    setWhere,\n    fetch,\n    abort,\n  };\n};\n","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/page.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/index.ts",[],["303","304"],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/residence1.tsx",["305","306","307","308","309","310","311","312","313","314"],"import {\n  LockOutlined,\n  PlusOutlined,\n  ReloadOutlined,\n  UnlockTwoTone,\n} from \"@ant-design/icons\";\nimport {\n  Image,\n  Button,\n  Card,\n  Checkbox,\n  Col,\n  Descriptions,\n  Divider,\n  Row,\n  Typography,\n  Input,\n} from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport Table, { ColumnProps, TableProps } from \"antd/lib/table\";\nimport { SorterResult } from \"antd/lib/table/interface\";\nimport React, { FC } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { FilterOrderOptions, OrderDirection } from \"../../services/base/filter\";\nimport { useResidentsList } from \"../../services/resident\";\nimport { Resident1 } from \"../../services/resident/model\";\nimport dayjs from \"../../utils/dayjs\";\nimport ResidentListAction from \"./actions\";\nimport { useResidences1Context } from \"./context\";\nimport ResidentModal from \"./modal\";\nimport { selectedResident1State, showResident1ModalState } from \"./states\";\n\nexport const PAGING_PAGE_SIZE = 10;\n\nconst columns: Array<ColumnProps<Resident1>> = [\n  {\n    title: \"Hình ảnh\",\n    dataIndex: \"image\",\n    key: \"image\",\n    align: \"center\",\n    render: (data: string, item) => {\n      if (data !== null && data.includes(\".png\")) {\n        const logo = require(`../residences/images/${data}`);\n        return <Image src={logo.default} />;\n      }\n    },\n    width: 100,\n  },\n  {\n    title: \"Họ và Tên\",\n    dataIndex: \"ho_ten\",\n    key: \"ho_ten\",\n  },\n  {\n    title: \"Tuổi\",\n    dataIndex: \"age\",\n    key: \"age\",\n  },\n  {\n    title: \"SHSQ\",\n    dataIndex: \"shsq\",\n    key: \"shsq\",\n  },\n  {\n    title: \"Năm Sinh\",\n    dataIndex: \"nam_sinh\",\n    key: \"nam_sinh\",\n    render: (value) => {\n      if (value === null || value === undefined) {\n        return dayjs(\"2000-02-02T00:00:00.000Z\").format(\"DD/MM/YYYY\");\n      } else {\n        return dayjs(value).format(\"DD/MM/YYYY\");\n      }\n    },\n  },\n  {\n    title: \"Quê Quán\",\n    dataIndex: \"que_quan\",\n    key: \"que_quan\",\n  },\n  {\n    title: \"Trú Quán\",\n    dataIndex: \"tru_quan\",\n    key: \"tru_quan\",\n  },\n  {\n    title: \"Địa Chỉ\",\n    dataIndex: \"dia_chi\",\n    key: \"dia_chi\",\n  },\n  {\n    title: \"Văn Hoá\",\n    dataIndex: \"van_hoa\",\n    key: \"van_hoa\",\n  },\n  {\n    title: \"Dân Tộc\",\n    dataIndex: \"dan_toc\",\n    key: \"dan_toc\",\n  },\n  {\n    title: \"Đoàn Viên\",\n    dataIndex: \"doan_vien\",\n    key: \"doan_vien\",\n    render: (data, item) => <Checkbox checked={data} />,\n  },\n  {\n    title: \"Đảng\",\n    dataIndex: \"dang\",\n    key: \"dang\",\n    render: (data, item) => <Checkbox checked={data} />,\n  },\n  {\n    title: \"Ngày Vào Đảng\",\n    dataIndex: \"ngay_vao_dang\",\n    key: \"ngay_vao_dang\",\n    render: (value) => {\n      if (value === null || value === undefined) {\n        return dayjs(\"2000-02-02T00:00:00.000Z\").format(\"DD/MM/YYYY\");\n      } else {\n        return dayjs(value).format(\"DD/MM/YYYY\");\n      }\n    },\n  },\n  {\n    title: \"Tôn Giáo\",\n    dataIndex: \"ton_giao\",\n    key: \"ton_giao\",\n  },\n  {\n    title: \"Sức Khoẻ\",\n    dataIndex: \"suc_khoe\",\n    key: \"suc_khoe\",\n  },\n  {\n    title: \"Nghề Nghiệp\",\n    dataIndex: \"nghe_nghiep\",\n    key: \"nghe_nghiep\",\n  },\n  {\n    title: \"Nơi Làm Việc\",\n    dataIndex: \"noi_lam_viec\",\n    key: \"noi_lam_viec\",\n  },\n  {\n    title: \"Số Điện Thoại\",\n    dataIndex: \"so_dien_thoai\",\n    key: \"so_dien_thoai\",\n  },\n  // {\n  //   title: \"Họ Tên Cha\",\n  //   dataIndex: \"ho_ten_cha\",\n  //   key: \"ho_ten_cha\",\n  // },\n  // {\n  //   title: \"Họ Tên Mẹ\",\n  //   dataIndex: \"ho_ten_me\",\n  //   key: \"ho_ten_me\",\n  // },\n  // {\n  //   title: \"Họ Tên Vợ\",\n  //   dataIndex: \"ho_ten_vo\",\n  //   key: \"ho_ten_vo\",\n  // },\n  // {\n  //   title: \"Số con\",\n  //   dataIndex: \"so_con\",\n  //   key: \"so_con\",\n  // },\n  // {\n  //   title: \"Thành Phần Xuất Thân\",\n  //   dataIndex: \"thanh_phan_xuat_than\",\n  //   key: \"thanh_phan_xuat_than\",\n  // },\n  // {\n  //   title: \"Ghi Chú\",\n  //   dataIndex: \"ghi_chu\",\n  //   key: \"ghi_chu\",\n  // },\n  {\n    title: \"\",\n    dataIndex: \"\",\n    key: \"action\",\n    render: (value, resident) => <ResidentListAction resident={resident} />,\n    width: 85,\n    align: \"right\",\n  },\n];\n\nconst Residence1List: FC = () => {\n  const { list } = useResidences1Context();\n  const { data, total, setSkip, setTake, setOrder, setWhere, fetch } = list;\n\n  const setShowForm = useSetRecoilState(showResident1ModalState);\n  const setSelectedResident = useSetRecoilState(selectedResident1State);\n\n  const handleAdd = () => {\n    setShowForm(true);\n    setSelectedResident(undefined);\n  };\n\n  const onSearch = (value: string) => {\n    if (value) {\n      {\n        setWhere({ ho_ten: value });\n      }\n    } else {\n      setWhere({});\n    }\n  };\n\n  const handleTableChange: TableProps<Resident1>[\"onChange\"] = (\n    pageData,\n    _,\n    sorter\n  ) => {\n    const { current, pageSize } = pageData;\n    const currentPage = (current as number) - 1;\n    setSkip(currentPage * (pageSize ?? PAGING_PAGE_SIZE));\n    setTake(pageSize);\n\n    const sortData = Array.isArray(sorter) ? sorter : [sorter];\n    const order = sortData.reduce<FilterOrderOptions>((all, item) => {\n      if (item.field && item.order) {\n        all[item.field as string] =\n          item.order === \"ascend\" ? OrderDirection.ASC : OrderDirection.DESC;\n      }\n      return all;\n    }, {});\n    setOrder(order);\n  };\n  return (\n    <div\n      className=\"site-card-wrapper h-screen\"\n      style={{ padding: 24, minHeight: 360 }}\n    >\n      <ResidentModal />\n      <Card bordered={false} bodyStyle={{ padding: 0 }}>\n        <div style={{ padding: \"1%\" }}>\n          <Typography.Title level={4}>\n            Danh sách\n            <span className=\"ml-auto\" style={{ marginLeft: \"90%\" }}>\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={handleAdd}\n              >\n                Add\n              </Button>\n              <ReloadOutlined onClick={fetch} />\n            </span>\n            <Search\n              className=\"ms-5\"\n              placeholder=\"Họ và tên\"\n              onSearch={onSearch}\n              style={{ width: 200 }}\n            />\n          </Typography.Title>\n        </div>\n        <Table\n          size=\"small\"\n          style={{ padding: \"1%\" }}\n          columns={columns}\n          rowKey=\"email\"\n          dataSource={data}\n          pagination={{ total }}\n          onChange={handleTableChange}\n        />\n      </Card>\n    </div>\n  );\n};\n\nexport default Residence1List;\n","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/states.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/actions.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/modal.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/context.tsx",["315","316","317"],"import React, {\n  createContext,\n  FC,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { UsePaginate } from \"../../services/base/paginate\";\nimport { useResidents1List } from \"../../services/resident1\";\n\nimport { Resident1 } from \"../../services/resident/model\";\n\nexport type Resident1Context = {\n  list: UsePaginate<Resident1>;\n};\n\nconst Resident1Context = createContext<Resident1Context | null>(null);\n\nexport const Resident1Provider: FC = ({ children }) => {\n  const list = useResidents1List();\n  console.log(list);\n\n  return (\n    <Resident1Context.Provider value={{ list }}>\n      {children}\n    </Resident1Context.Provider>\n  );\n};\n\nexport const useResidences1Context = () => {\n  const context = useContext(Resident1Context);\n  if (!context) {\n    throw new Error(\n      \"useResidences1context must be used inside Resident1Provider\"\n    );\n  }\n\n  return context;\n};\n\nexport default Resident1Provider;\n","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/form.tsx",["318","319","320","321","322","323"],"import React, { FC, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Input,\n  Image,\n  Switch,\n  Upload,\n  message,\n  Col,\n  Row,\n} from \"antd\";\nimport { FormInstance } from \"antd/es/form\";\nimport { Resident } from \"../../services/resident/model\";\nimport { UploadOutlined } from \"@ant-design/icons\";\n\nconst RenderImage = (props: any) => {\n  if (props.image === null || props.image === undefined) {\n    return (\n      <Upload\n        name=\"image\"\n        listType=\"picture\"\n        action={\"/api/resident/image\"}\n        onChange={props.onChange}\n      >\n        <Button icon={<UploadOutlined />}>Click to upload</Button>\n      </Upload>\n    );\n  } else {\n    if (props.image.includes(\".png\")) {\n      return (\n        <Image src={require(`../residences/images/${props.image}`).default} />\n      );\n    } else {\n      return (\n        <Upload\n          name=\"image\"\n          listType=\"picture\"\n          action={\"/api/resident/image\"}\n          onChange={props.onChange}\n        >\n          <Button icon={<UploadOutlined />}>Click to upload</Button>\n        </Upload>\n      );\n    }\n  }\n};\n\nconst ResidentForm: FC<{ form: FormInstance; obj?: Resident }> = ({\n  form,\n  obj,\n}) => {\n  const [imagePath, setImagePath] = useState(\"\");\n\n  const onChange = (info: any) => {\n    if (info.file.status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === \"done\") {\n      message.success(`${info.file.name} file uploaded successfully`);\n      setImagePath(info.file.name);\n    } else if (info.file.status === \"error\") {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({ image: imagePath });\n  }, [imagePath]);\n\n  useEffect(() => {\n    if (obj) {\n      console.log(obj.ngay_vao_dang);\n      form.setFieldsValue(obj);\n      setImagePath(obj.image);\n    } else {\n      form.resetFields();\n    }\n  }, [obj]);\n\n  return (\n    <Form form={form} labelCol={{ flex: \"0 0 90px\" }}>\n      <Form.Item name=\"id\" hidden={true}>\n        <Input disabled={true} />\n      </Form.Item>\n      <Row gutter={24}>\n        <Col span={12}>\n          <RenderImage image={obj?.image} onChange={onChange} />\n          <Form.Item name=\"image\">\n            <Input value={imagePath} hidden />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            label=\"Họ Và Tên\"\n            name=\"ho_ten\"\n            rules={[{ required: true, message: \"Hãy nhập họ Và tên!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"SHSQ\" name=\"shsq\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Tuổi\"\n            name=\"age\"\n            rules={[{ required: true, message: \"Hãy nhập tuổi!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Năm sinh\"\n            name=\"nam_sinh\"\n            rules={[{ required: true, message: \"Hãy nhập năm sinh!\" }]}\n          >\n            <Input type=\"date\" />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Quê quán\"\n            name=\"que_quan\"\n            rules={[{ required: true, message: \"Hãy nhập quê quán!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Trú quán\"\n            name=\"tru_quan\"\n            rules={[{ required: true, message: \"Hãy nhập trú quán!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Địa chỉ\"\n            name=\"dia_chi\"\n            rules={[{ required: true, message: \"Hãy nhập địa chỉ!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Văn hoá\" name=\"van_hoa\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Đảng\" name=\"dang\">\n            {obj?.dang == true || obj?.dang == false ? (\n              <Switch defaultChecked={obj?.dang} />\n            ) : (\n              <Switch defaultChecked={false} />\n            )}\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Đoàn viên\" name=\"doan_vien\">\n            {obj?.doan_vien == true || obj?.doan_vien == false ? (\n              <Switch defaultChecked={obj?.doan_vien} />\n            ) : (\n              <Switch defaultChecked={false} />\n            )}\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Vào đảng\" name=\"ngay_vao_dang\">\n            <Input type=\"date\" />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Tôn giáo\" name=\"ton_giao\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Sức khoẻ\"\n            name=\"suc_khoe\"\n            rules={[{ required: true, message: \"Hãy nhập sức khoẻ!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Nơi làm việc\" name=\"noi_lam_viec\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"SĐT\" name=\"so_dien_thoai\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Cấp bậc\" name=\"cap_bac\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Chức vụ\" name=\"chuc_vu\">\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default ResidentForm;\n","/Users/abc/Desktop/templateworkspace/packages/client/src/services/resident1/resident1.service.ts",["324","325","326"],"import client from \"../base/client\";\nimport { get, post, put, deleted } from \"../base/fetch\";\nimport { FilterOrderOptions } from \"../base/filter\";\nimport { usePaginate } from \"../base/paginate\";\nimport { RequestParams } from \"../base/request\";\nimport { Resident } from \"./model\";\n\nexport const create = async (resident: Resident, params?: RequestParams) => {\n  return client.api.Resident1ControllerCreate(resident, params);\n};\n\nexport const update = async (resident: Resident, params?: RequestParams) => {\n  return client.api.Resident1ControllerUpdate(\n    resident.id.toString(),\n    resident,\n    params\n  );\n};\n\nexport const image = async (image: any) => {\n  return post(\"/api/resident1/image\", {\n    image: image,\n  } as any);\n};\n\nexport const destroy = async (id: number) => {\n  return client.api.Resident1ControllerDeleteById(id.toString());\n};\n\nexport const useResidents1List = (order?: FilterOrderOptions) => {\n  return usePaginate<Resident>(\"/api/resident1\", { order });\n};\n\nexport const getResident = async (\n  query?: {\n    select?: [];\n    order?: any;\n    where?: any;\n    skip?: number;\n    take?: number;\n  },\n  params?: RequestParams\n) => {\n  return client.api.Resident1ControllerGetAll(query, params);\n};\n","/Users/abc/Desktop/templateworkspace/packages/client/src/services/resident1/index.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/lazy.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences1/page.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/lazy.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/page.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/context.tsx",["327","328","329"],"import React, {\n  createContext,\n  FC,\n  useContext,\n  useEffect,\n  useState,\n} from \"react\";\nimport { UsePaginate } from \"../../services/base/paginate\";\nimport { useResidentsList } from \"../../services/resident2\";\n\n\nimport { Resident2 } from \"../../services/resident/model\";\n\nexport type ResidentContext = {\n  list: UsePaginate<Resident2>;\n};\n\nconst ResidentContext = createContext<ResidentContext | null>(null);\n\nexport const ResidentProvider: FC = ({ children }) => {\n  const list = useResidentsList();\n\n  return (\n    <ResidentContext.Provider value={{ list }}>\n      {children}\n    </ResidentContext.Provider>\n  );\n};\n\nexport const useResidencesContext = () => {\n  const context = useContext(ResidentContext);\n  if (!context) {\n    throw new Error(\"useResidences2context must be used inside ResidentProvider\");\n  }\n\n  return context;\n};\n\nexport default ResidentProvider;\n","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/residence.tsx",["330","331","332","333","334","335","336","337"],"import {\n  LockOutlined,\n  PlusOutlined,\n  ReloadOutlined,\n  UnlockTwoTone,\n} from \"@ant-design/icons\";\nimport {\n  Image,\n  Button,\n  Card,\n  Checkbox,\n  Col,\n  Descriptions,\n  Divider,\n  Row,\n  Typography,\n  Input,\n} from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport Table, { ColumnProps, TableProps } from \"antd/lib/table\";\nimport React, { FC } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { FilterOrderOptions, OrderDirection } from \"../../services/base/filter\";\nimport { Resident } from \"../../services/resident/model\";\nimport dayjs from \"../../utils/dayjs\";\nimport ResidentListAction from \"./actions\";\nimport { useResidencesContext } from \"./context\";\nimport ResidentModal from \"./modal\";\nimport { selectedResidentState, showResidentModalState } from \"./states\";\n\nexport const PAGING_PAGE_SIZE = 10;\n\nconst columns: Array<ColumnProps<Resident>> = [\n  {\n    title: \"Hình ảnh\",\n    dataIndex: \"image\",\n    key: \"image\",\n    align: \"center\",\n    render: (data: string, item) => {\n      if (data !== null && data.includes(\".png\")) {\n        const logo = require(`../residences/images/${data}`);\n        return <Image src={logo.default} />;\n      }\n    },\n    width: 100,\n  },\n  {\n    title: \"Họ và Tên\",\n    dataIndex: \"ho_ten\",\n    key: \"ho_ten\",\n  },\n  {\n    title: \"Tuổi\",\n    dataIndex: \"age\",\n    key: \"age\",\n  },\n  {\n    title: \"SHSQ\",\n    dataIndex: \"shsq\",\n    key: \"shsq\",\n  },\n  {\n    title: \"Năm Sinh\",\n    dataIndex: \"nam_sinh\",\n    key: \"nam_sinh\",\n    render: (value) => {\n      if (value === null || value === undefined) {\n        return dayjs(\"2000-02-02T00:00:00.000Z\").format(\"DD/MM/YYYY\");\n      } else {\n        return dayjs(value).format(\"DD/MM/YYYY\");\n      }\n    },\n  },\n  {\n    title: \"Quê Quán\",\n    dataIndex: \"que_quan\",\n    key: \"que_quan\",\n  },\n  {\n    title: \"Trú Quán\",\n    dataIndex: \"tru_quan\",\n    key: \"tru_quan\",\n  },\n  {\n    title: \"Địa Chỉ\",\n    dataIndex: \"dia_chi\",\n    key: \"dia_chi\",\n  },\n  {\n    title: \"Văn Hoá\",\n    dataIndex: \"van_hoa\",\n    key: \"van_hoa\",\n  },\n  {\n    title: \"Dân Tộc\",\n    dataIndex: \"dan_toc\",\n    key: \"dan_toc\",\n  },\n  {\n    title: \"Đoàn Viên\",\n    dataIndex: \"doan_vien\",\n    key: \"doan_vien\",\n    render: (data, item) => <Checkbox checked={data} />,\n  },\n  {\n    title: \"Đảng\",\n    dataIndex: \"dang\",\n    key: \"dang\",\n    render: (data, item) => <Checkbox checked={data} />,\n  },\n  {\n    title: \"Ngày Vào Đảng\",\n    dataIndex: \"ngay_vao_dang\",\n    key: \"ngay_vao_dang\",\n    render: (value) => {\n      if (value === null || value === undefined) {\n        return dayjs(\"2000-02-02T00:00:00.000Z\").format(\"DD/MM/YYYY\");\n      } else {\n        return dayjs(value).format(\"DD/MM/YYYY\");\n      }\n    },\n  },\n  {\n    title: \"Tôn Giáo\",\n    dataIndex: \"ton_giao\",\n    key: \"ton_giao\",\n  },\n  {\n    title: \"Sức Khoẻ\",\n    dataIndex: \"suc_khoe\",\n    key: \"suc_khoe\",\n  },\n  {\n    title: \"Nghề Nghiệp\",\n    dataIndex: \"nghe_nghiep\",\n    key: \"nghe_nghiep\",\n  },\n  {\n    title: \"Nơi Làm Việc\",\n    dataIndex: \"noi_lam_viec\",\n    key: \"noi_lam_viec\",\n  },\n  {\n    title: \"Số Điện Thoại\",\n    dataIndex: \"so_dien_thoai\",\n    key: \"so_dien_thoai\",\n  },\n  // {\n  //   title: \"Họ Tên Cha\",\n  //   dataIndex: \"ho_ten_cha\",\n  //   key: \"ho_ten_cha\",\n  // },\n  // {\n  //   title: \"Họ Tên Mẹ\",\n  //   dataIndex: \"ho_ten_me\",\n  //   key: \"ho_ten_me\",\n  // },\n  // {\n  //   title: \"Họ Tên Vợ\",\n  //   dataIndex: \"ho_ten_vo\",\n  //   key: \"ho_ten_vo\",\n  // },\n  // {\n  //   title: \"Số con\",\n  //   dataIndex: \"so_con\",\n  //   key: \"so_con\",\n  // },\n  // {\n  //   title: \"Thành Phần Xuất Thân\",\n  //   dataIndex: \"thanh_phan_xuat_than\",\n  //   key: \"thanh_phan_xuat_than\",\n  // },\n  {\n    title: \"Nhập Ngũ\",\n    dataIndex: \"nhap_ngu\",\n    key: \"nhap_ngu\",\n    render: (value) => {\n      if (value === null || value === undefined) {\n        return dayjs(\"2000-02-02T00:00:00.000Z\").format(\"DD/MM/YYYY\");\n      } else {\n        return dayjs(value).format(\"DD/MM/YYYY\");\n      }\n    },\n  },\n  {\n    title: \"Xuất Ngũ\",\n    dataIndex: \"xuat_ngu\",\n    key: \"xuat_ngu\",\n    render: (value) => {\n      if (value === null || value === undefined) {\n        return dayjs(\"2000-02-02T00:00:00.000Z\").format(\"DD/MM/YYYY\");\n      } else {\n        return dayjs(value).format(\"DD/MM/YYYY\");\n      }\n    },\n  },\n  {\n    title: \"Tên Đơn Vị\",\n    dataIndex: \"ten_don_vi\",\n    key: \"ten_don_vi\",\n  },\n  {\n    title: \"Cấp Bậc\",\n    dataIndex: \"cap_bac\",\n    key: \"cap_bac\",\n  },\n  {\n    title: \"Chức Vụ\",\n    dataIndex: \"chuc_vu\",\n    key: \"chuc_vu\",\n  },\n  // {\n  //   title: \"Ghi Chú\",\n  //   dataIndex: \"ghi_chu\",\n  //   key: \"ghi_chu\",\n  // },\n  {\n    title: \"\",\n    dataIndex: \"\",\n    key: \"action\",\n    render: (value, resident) => <ResidentListAction resident={resident} />,\n    width: 85,\n    align: \"right\",\n  },\n];\n\nconst ResidenceList: FC = () => {\n  const { list } = useResidencesContext();\n  const { data, total, setSkip, setTake, setOrder, setWhere, fetch } = list;\n\n  const setShowForm = useSetRecoilState(showResidentModalState);\n  const setSelectedResident = useSetRecoilState(selectedResidentState);\n\n  const handleAdd = () => {\n    setShowForm(true);\n    setSelectedResident(undefined);\n  };\n\n  const onSearch = (value: string) => {\n    if (value) {\n      {\n        setWhere({ ho_ten: value });\n      }\n    } else {\n      setWhere({});\n    }\n  };\n\n  const handleTableChange: TableProps<Resident>[\"onChange\"] = (\n    pageData,\n    _,\n    sorter\n  ) => {\n    const { current, pageSize } = pageData;\n    const currentPage = (current as number) - 1;\n    setSkip(currentPage * (pageSize ?? PAGING_PAGE_SIZE));\n    setTake(pageSize);\n\n    const sortData = Array.isArray(sorter) ? sorter : [sorter];\n    const order = sortData.reduce<FilterOrderOptions>((all, item) => {\n      if (item.field && item.order) {\n        all[item.field as string] =\n          item.order === \"ascend\" ? OrderDirection.ASC : OrderDirection.DESC;\n      }\n      return all;\n    }, {});\n    setOrder(order);\n  };\n  return (\n    <div\n      className=\"site-card-wrapper h-screen\"\n      style={{ padding: 24, minHeight: 360 }}\n    >\n      <ResidentModal />\n      <Card bordered={false} bodyStyle={{ padding: 0 }}>\n        <div style={{ padding: \"1%\" }}>\n          <Typography.Title level={4}>\n            Danh sách\n            <span className=\"ml-auto\" style={{ marginLeft: \"90%\" }}>\n              <Button\n                type=\"primary\"\n                icon={<PlusOutlined />}\n                onClick={handleAdd}\n              >\n                Add\n              </Button>\n              <ReloadOutlined onClick={fetch} />\n            </span>\n            <Search\n              className=\"ms-5\"\n              placeholder=\"Họ và tên\"\n              onSearch={onSearch}\n              style={{ width: 200 }}\n            />\n          </Typography.Title>\n        </div>\n        <Table\n          size=\"small\"\n          style={{ padding: \"1%\" }}\n          columns={columns}\n          rowKey=\"email\"\n          dataSource={data}\n          pagination={{ total }}\n          onChange={handleTableChange}\n        />\n      </Card>\n    </div>\n  );\n};\n\nexport default ResidenceList;\n","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/states.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/actions.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/modal.tsx",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences2/form.tsx",["338","339","340","341","342","343","344","345","346","347","348","349","350","351"],"import React, { FC, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Input,\n  Image,\n  Select,\n  Switch,\n  Upload,\n  message,\n  DatePicker,\n  Col,\n  Row,\n} from \"antd\";\nimport { FormInstance } from \"antd/es/form\";\nimport { Resident } from \"../../services/resident/model\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { diskStorage } from \"multer\";\nimport ResidencesService from \"../../services/resident\";\nimport { post } from \"../../services/base/fetch\";\nimport moment from \"moment\";\nimport dayjs from \"../../utils/dayjs\";\nimport client from \"../../services/base/client\";\n\nconst RenderImage = (props: any) => {\n  if (props.image === null || props.image === undefined) {\n    return (\n      <Upload\n        name=\"image\"\n        listType=\"picture\"\n        action={\"/api/resident/image\"}\n        onChange={props.onChange}\n      >\n        <Button icon={<UploadOutlined />}>Click to upload</Button>\n      </Upload>\n    );\n  } else {\n    if (props.image.includes(\".png\")) {\n      return <Image src={require(`../residences/images/${props.image}`).default} />;\n    } else {\n      return (\n        <Upload\n          name=\"image\"\n          listType=\"picture\"\n          action={\"/api/resident2/image\"}\n          onChange={props.onChange}\n        >\n          <Button icon={<UploadOutlined />}>Click to upload</Button>\n        </Upload>\n      );\n    }\n  }\n};\n\nconst ResidentForm: FC<{ form: FormInstance; obj?: Resident }> = ({\n  form,\n  obj,\n}) => {\n  const [imagePath, setImagePath] = useState(\"\");\n\n  const onChange = (info: any) => {\n    if (info.file.status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === \"done\") {\n      message.success(`${info.file.name} file uploaded successfully`);\n      setImagePath(info.file.name);\n    } else if (info.file.status === \"error\") {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  };\n\n  useEffect(() => {\n    form.setFieldsValue({ image: imagePath });\n  }, [imagePath]);\n\n  useEffect(() => {\n    if (obj) {\n      console.log(obj.ngay_vao_dang);\n      form.setFieldsValue(obj);\n      setImagePath(obj.image);\n    } else {\n      form.resetFields();\n    }\n  }, [obj]);\n\n  return (\n    <Form form={form} labelCol={{ flex: \"0 0 90px\" }}>\n      <Form.Item name=\"id\" hidden={true}>\n        <Input disabled={true} />\n      </Form.Item>\n      <Row gutter={24}>\n        <Col span={12}>\n          <RenderImage image={obj?.image} onChange={onChange} />\n          <Form.Item name=\"image\">\n            <Input value={imagePath} hidden />\n          </Form.Item>\n        </Col>\n        <Col span={12}>\n          <Form.Item\n            label=\"Họ Và Tên\"\n            name=\"ho_ten\"\n            rules={[{ required: true, message: \"Hãy nhập họ Và tên!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"SHSQ\" name=\"shsq\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Tuổi\"\n            name=\"age\"\n            rules={[{ required: true, message: \"Hãy nhập tuổi!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Năm sinh\"\n            name=\"nam_sinh\"\n            rules={[{ required: true, message: \"Hãy nhập năm sinh!\" }]}\n          >\n            <Input type=\"date\" />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Quê quán\"\n            name=\"que_quan\"\n            rules={[{ required: true, message: \"Hãy nhập quê quán!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Trú quán\"\n            name=\"tru_quan\"\n            rules={[{ required: true, message: \"Hãy nhập trú quán!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Địa chỉ\"\n            name=\"dia_chi\"\n            rules={[{ required: true, message: \"Hãy nhập địa chỉ!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Văn hoá\" name=\"van_hoa\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Đảng\" name=\"dang\">\n            {obj?.dang == true || obj?.dang == false ? (\n              <Switch defaultChecked={obj?.dang} />\n            ) : (\n              <Switch defaultChecked={false} />\n            )}\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Đoàn viên\" name=\"doan_vien\">\n            {obj?.doan_vien == true || obj?.doan_vien == false ? (\n              <Switch defaultChecked={obj?.doan_vien} />\n            ) : (\n              <Switch defaultChecked={false} />\n            )}\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Vào đảng\" name=\"ngay_vao_dang\">\n            <Input type=\"date\" />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Tôn giáo\" name=\"ton_giao\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item\n            label=\"Sức khoẻ\"\n            name=\"suc_khoe\"\n            rules={[{ required: true, message: \"Hãy nhập sức khoẻ!\" }]}\n          >\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Nơi làm việc\" name=\"noi_lam_viec\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"SĐT\" name=\"so_dien_thoai\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Tên đơn vị\" name=\"ten_don_vi\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Cấp bậc\" name=\"cap_bac\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Chức vụ\" name=\"chuc_vu\">\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default ResidentForm;\n","/Users/abc/Desktop/templateworkspace/packages/client/src/services/resident2/index.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/services/resident2/resident2.service.ts",["352","353","354"],"import client from \"../base/client\";\nimport { get, post, put, deleted } from \"../base/fetch\";\nimport { FilterOrderOptions } from \"../base/filter\";\nimport { usePaginate } from \"../base/paginate\";\nimport { RequestParams } from \"../base/request\";\nimport { Resident } from \"./model\";\n\nexport const create = async (resident: Resident, params?: RequestParams) => {\n  return client.api.Resident2ControllerCreate(resident, params);\n};\n\nexport const update = async (resident: Resident, params?: RequestParams) => {\n  return client.api.Resident2ControllerUpdate(\n    resident.id.toString(),\n    resident,\n    params\n  );\n};\n\nexport const image = async (image: any) => {\n  return post(\"/api/resident2/image\", {\n    image: image,\n  } as any);\n};\n\nexport const destroy = async (id: number) => {\n  return client.api.Resident2ControllerDeleteById(id.toString());\n};\n\nexport const useResidentsList = (order?: FilterOrderOptions) => {\n  return usePaginate<Resident>(\"/api/resident2\", { order });\n};\n\nexport const getResident = async (\n  query?: {\n    select?: [];\n    order?: any;\n    where?: any;\n    skip?: number;\n    take?: number;\n  },\n  params?: RequestParams\n) => {\n  return client.api.Resident2ControllerGetAll(query, params);\n};\n","/Users/abc/Desktop/templateworkspace/packages/client/src/pages/residences/index.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/login/lazy.ts",[],"/Users/abc/Desktop/templateworkspace/packages/client/src/pages/login/login.tsx",[],{"ruleId":"355","replacedBy":"356"},{"ruleId":"357","replacedBy":"358"},{"ruleId":"359","severity":1,"message":"360","line":4,"column":3,"nodeType":"361","messageId":"362","endLine":4,"endColumn":16},{"ruleId":"359","severity":1,"message":"363","line":5,"column":3,"nodeType":"361","messageId":"362","endLine":5,"endColumn":17},{"ruleId":"359","severity":1,"message":"364","line":6,"column":3,"nodeType":"361","messageId":"362","endLine":6,"endColumn":21},{"ruleId":"359","severity":1,"message":"365","line":8,"column":3,"nodeType":"361","messageId":"362","endLine":8,"endColumn":18},{"ruleId":"359","severity":1,"message":"366","line":9,"column":3,"nodeType":"361","messageId":"362","endLine":9,"endColumn":15},{"ruleId":"359","severity":1,"message":"367","line":11,"column":8,"nodeType":"361","messageId":"362","endLine":11,"endColumn":21},{"ruleId":"359","severity":1,"message":"368","line":19,"column":9,"nodeType":"361","messageId":"362","endLine":19,"endColumn":25},{"ruleId":"355","replacedBy":"369"},{"ruleId":"357","replacedBy":"370"},{"ruleId":"359","severity":1,"message":"371","line":2,"column":3,"nodeType":"361","messageId":"362","endLine":2,"endColumn":15},{"ruleId":"359","severity":1,"message":"372","line":5,"column":3,"nodeType":"361","messageId":"362","endLine":5,"endColumn":16},{"ruleId":"359","severity":1,"message":"373","line":12,"column":3,"nodeType":"361","messageId":"362","endLine":12,"endColumn":6},{"ruleId":"359","severity":1,"message":"374","line":13,"column":3,"nodeType":"361","messageId":"362","endLine":13,"endColumn":15},{"ruleId":"359","severity":1,"message":"375","line":14,"column":3,"nodeType":"361","messageId":"362","endLine":14,"endColumn":10},{"ruleId":"359","severity":1,"message":"376","line":15,"column":3,"nodeType":"361","messageId":"362","endLine":15,"endColumn":6},{"ruleId":"359","severity":1,"message":"377","line":17,"column":3,"nodeType":"361","messageId":"362","endLine":17,"endColumn":8},{"ruleId":"359","severity":1,"message":"378","line":21,"column":10,"nodeType":"361","messageId":"362","endLine":21,"endColumn":22},{"ruleId":"359","severity":1,"message":"379","line":24,"column":8,"nodeType":"361","messageId":"362","endLine":24,"endColumn":20},{"ruleId":"359","severity":1,"message":"380","line":26,"column":10,"nodeType":"361","messageId":"362","endLine":26,"endColumn":26},{"ruleId":"381","severity":1,"message":"382","line":244,"column":7,"nodeType":"383","messageId":"384","endLine":246,"endColumn":8},{"ruleId":"359","severity":1,"message":"385","line":5,"column":3,"nodeType":"361","messageId":"362","endLine":5,"endColumn":12},{"ruleId":"359","severity":1,"message":"386","line":6,"column":3,"nodeType":"361","messageId":"362","endLine":6,"endColumn":11},{"ruleId":"387","severity":1,"message":"388","line":18,"column":7,"nodeType":"361","messageId":"389","endLine":18,"endColumn":22},{"ruleId":"359","severity":1,"message":"390","line":2,"column":10,"nodeType":"361","messageId":"362","endLine":2,"endColumn":13},{"ruleId":"359","severity":1,"message":"391","line":2,"column":21,"nodeType":"361","messageId":"362","endLine":2,"endColumn":24},{"ruleId":"359","severity":1,"message":"392","line":2,"column":26,"nodeType":"361","messageId":"362","endLine":2,"endColumn":33},{"ruleId":"393","severity":1,"message":"394","line":104,"column":6,"nodeType":"395","endLine":104,"endColumn":41,"suggestions":"396"},{"ruleId":"359","severity":1,"message":"397","line":7,"column":3,"nodeType":"361","messageId":"362","endLine":7,"endColumn":9},{"ruleId":"359","severity":1,"message":"398","line":11,"column":3,"nodeType":"361","messageId":"362","endLine":11,"endColumn":13},{"ruleId":"359","severity":1,"message":"399","line":18,"column":10,"nodeType":"361","messageId":"362","endLine":18,"endColumn":21},{"ruleId":"359","severity":1,"message":"400","line":19,"column":8,"nodeType":"361","messageId":"362","endLine":19,"endColumn":25},{"ruleId":"359","severity":1,"message":"401","line":20,"column":10,"nodeType":"361","messageId":"362","endLine":20,"endColumn":14},{"ruleId":"359","severity":1,"message":"402","line":21,"column":8,"nodeType":"361","messageId":"362","endLine":21,"endColumn":14},{"ruleId":"359","severity":1,"message":"403","line":22,"column":8,"nodeType":"361","messageId":"362","endLine":22,"endColumn":13},{"ruleId":"359","severity":1,"message":"404","line":23,"column":8,"nodeType":"361","messageId":"362","endLine":23,"endColumn":14},{"ruleId":"393","severity":1,"message":"405","line":75,"column":6,"nodeType":"395","endLine":75,"endColumn":17,"suggestions":"406"},{"ruleId":"393","severity":1,"message":"405","line":85,"column":6,"nodeType":"395","endLine":85,"endColumn":11,"suggestions":"407"},{"ruleId":"408","severity":1,"message":"409","line":165,"column":24,"nodeType":"410","messageId":"411","endLine":165,"endColumn":26},{"ruleId":"408","severity":1,"message":"409","line":165,"column":45,"nodeType":"410","messageId":"411","endLine":165,"endColumn":47},{"ruleId":"408","severity":1,"message":"409","line":174,"column":29,"nodeType":"410","messageId":"411","endLine":174,"endColumn":31},{"ruleId":"408","severity":1,"message":"409","line":174,"column":55,"nodeType":"410","messageId":"411","endLine":174,"endColumn":57},{"ruleId":"393","severity":1,"message":"394","line":110,"column":6,"nodeType":"395","endLine":110,"endColumn":29,"suggestions":"412"},{"ruleId":"355","replacedBy":"413"},{"ruleId":"357","replacedBy":"414"},{"ruleId":"359","severity":1,"message":"371","line":2,"column":3,"nodeType":"361","messageId":"362","endLine":2,"endColumn":15},{"ruleId":"359","severity":1,"message":"372","line":5,"column":3,"nodeType":"361","messageId":"362","endLine":5,"endColumn":16},{"ruleId":"359","severity":1,"message":"373","line":12,"column":3,"nodeType":"361","messageId":"362","endLine":12,"endColumn":6},{"ruleId":"359","severity":1,"message":"374","line":13,"column":3,"nodeType":"361","messageId":"362","endLine":13,"endColumn":15},{"ruleId":"359","severity":1,"message":"375","line":14,"column":3,"nodeType":"361","messageId":"362","endLine":14,"endColumn":10},{"ruleId":"359","severity":1,"message":"376","line":15,"column":3,"nodeType":"361","messageId":"362","endLine":15,"endColumn":6},{"ruleId":"359","severity":1,"message":"377","line":17,"column":3,"nodeType":"361","messageId":"362","endLine":17,"endColumn":8},{"ruleId":"359","severity":1,"message":"378","line":21,"column":10,"nodeType":"361","messageId":"362","endLine":21,"endColumn":22},{"ruleId":"359","severity":1,"message":"380","line":25,"column":10,"nodeType":"361","messageId":"362","endLine":25,"endColumn":26},{"ruleId":"381","severity":1,"message":"382","line":204,"column":7,"nodeType":"383","messageId":"384","endLine":206,"endColumn":8},{"ruleId":"359","severity":1,"message":"385","line":5,"column":3,"nodeType":"361","messageId":"362","endLine":5,"endColumn":12},{"ruleId":"359","severity":1,"message":"386","line":6,"column":3,"nodeType":"361","messageId":"362","endLine":6,"endColumn":11},{"ruleId":"387","severity":1,"message":"415","line":17,"column":7,"nodeType":"361","messageId":"389","endLine":17,"endColumn":23},{"ruleId":"393","severity":1,"message":"405","line":69,"column":6,"nodeType":"395","endLine":69,"endColumn":17,"suggestions":"416"},{"ruleId":"393","severity":1,"message":"405","line":79,"column":6,"nodeType":"395","endLine":79,"endColumn":11,"suggestions":"417"},{"ruleId":"408","severity":1,"message":"409","line":159,"column":24,"nodeType":"410","messageId":"411","endLine":159,"endColumn":26},{"ruleId":"408","severity":1,"message":"409","line":159,"column":45,"nodeType":"410","messageId":"411","endLine":159,"endColumn":47},{"ruleId":"408","severity":1,"message":"409","line":168,"column":29,"nodeType":"410","messageId":"411","endLine":168,"endColumn":31},{"ruleId":"408","severity":1,"message":"409","line":168,"column":55,"nodeType":"410","messageId":"411","endLine":168,"endColumn":57},{"ruleId":"359","severity":1,"message":"390","line":2,"column":10,"nodeType":"361","messageId":"362","endLine":2,"endColumn":13},{"ruleId":"359","severity":1,"message":"391","line":2,"column":21,"nodeType":"361","messageId":"362","endLine":2,"endColumn":24},{"ruleId":"359","severity":1,"message":"392","line":2,"column":26,"nodeType":"361","messageId":"362","endLine":2,"endColumn":33},{"ruleId":"359","severity":1,"message":"385","line":5,"column":3,"nodeType":"361","messageId":"362","endLine":5,"endColumn":12},{"ruleId":"359","severity":1,"message":"386","line":6,"column":3,"nodeType":"361","messageId":"362","endLine":6,"endColumn":11},{"ruleId":"387","severity":1,"message":"388","line":18,"column":7,"nodeType":"361","messageId":"389","endLine":18,"endColumn":22},{"ruleId":"359","severity":1,"message":"371","line":2,"column":3,"nodeType":"361","messageId":"362","endLine":2,"endColumn":15},{"ruleId":"359","severity":1,"message":"372","line":5,"column":3,"nodeType":"361","messageId":"362","endLine":5,"endColumn":16},{"ruleId":"359","severity":1,"message":"373","line":12,"column":3,"nodeType":"361","messageId":"362","endLine":12,"endColumn":6},{"ruleId":"359","severity":1,"message":"374","line":13,"column":3,"nodeType":"361","messageId":"362","endLine":13,"endColumn":15},{"ruleId":"359","severity":1,"message":"375","line":14,"column":3,"nodeType":"361","messageId":"362","endLine":14,"endColumn":10},{"ruleId":"359","severity":1,"message":"376","line":15,"column":3,"nodeType":"361","messageId":"362","endLine":15,"endColumn":6},{"ruleId":"359","severity":1,"message":"377","line":17,"column":3,"nodeType":"361","messageId":"362","endLine":17,"endColumn":8},{"ruleId":"381","severity":1,"message":"382","line":241,"column":7,"nodeType":"383","messageId":"384","endLine":243,"endColumn":8},{"ruleId":"359","severity":1,"message":"397","line":7,"column":3,"nodeType":"361","messageId":"362","endLine":7,"endColumn":9},{"ruleId":"359","severity":1,"message":"398","line":11,"column":3,"nodeType":"361","messageId":"362","endLine":11,"endColumn":13},{"ruleId":"359","severity":1,"message":"399","line":18,"column":10,"nodeType":"361","messageId":"362","endLine":18,"endColumn":21},{"ruleId":"359","severity":1,"message":"400","line":19,"column":8,"nodeType":"361","messageId":"362","endLine":19,"endColumn":25},{"ruleId":"359","severity":1,"message":"401","line":20,"column":10,"nodeType":"361","messageId":"362","endLine":20,"endColumn":14},{"ruleId":"359","severity":1,"message":"402","line":21,"column":8,"nodeType":"361","messageId":"362","endLine":21,"endColumn":14},{"ruleId":"359","severity":1,"message":"403","line":22,"column":8,"nodeType":"361","messageId":"362","endLine":22,"endColumn":13},{"ruleId":"359","severity":1,"message":"404","line":23,"column":8,"nodeType":"361","messageId":"362","endLine":23,"endColumn":14},{"ruleId":"393","severity":1,"message":"405","line":75,"column":6,"nodeType":"395","endLine":75,"endColumn":17,"suggestions":"418"},{"ruleId":"393","severity":1,"message":"405","line":85,"column":6,"nodeType":"395","endLine":85,"endColumn":11,"suggestions":"419"},{"ruleId":"408","severity":1,"message":"409","line":165,"column":24,"nodeType":"410","messageId":"411","endLine":165,"endColumn":26},{"ruleId":"408","severity":1,"message":"409","line":165,"column":45,"nodeType":"410","messageId":"411","endLine":165,"endColumn":47},{"ruleId":"408","severity":1,"message":"409","line":174,"column":29,"nodeType":"410","messageId":"411","endLine":174,"endColumn":31},{"ruleId":"408","severity":1,"message":"409","line":174,"column":55,"nodeType":"410","messageId":"411","endLine":174,"endColumn":57},{"ruleId":"359","severity":1,"message":"390","line":2,"column":10,"nodeType":"361","messageId":"362","endLine":2,"endColumn":13},{"ruleId":"359","severity":1,"message":"391","line":2,"column":21,"nodeType":"361","messageId":"362","endLine":2,"endColumn":24},{"ruleId":"359","severity":1,"message":"392","line":2,"column":26,"nodeType":"361","messageId":"362","endLine":2,"endColumn":33},"no-native-reassign",["420"],"no-negated-in-lhs",["421"],"@typescript-eslint/no-unused-vars","'BuildOutlined' is defined but never used.","Identifier","unusedVar","'ChromeOutlined' is defined but never used.","'ExperimentOutlined' is defined but never used.","'ProfileOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'AboutMeScreen' is defined but never used.","'fullscreenRoutes' is assigned a value but never used.",["420"],["421"],"'LockOutlined' is defined but never used.","'UnlockTwoTone' is defined but never used.","'Col' is defined but never used.","'Descriptions' is defined but never used.","'Divider' is defined but never used.","'Row' is defined but never used.","'Input' is defined but never used.","'SorterResult' is defined but never used.","'PreviewImage' is defined but never used.","'useResidentsList' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useEffect' is defined but never used.","'useState' is defined but never used.","@typescript-eslint/no-redeclare","'ResidentContext' is already defined.","redeclared","'get' is defined but never used.","'put' is defined but never used.","'deleted' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'get', 'options', and 'url'. Either include them or remove the dependency array.","ArrayExpression",["422"],"'Select' is defined but never used.","'DatePicker' is defined but never used.","'diskStorage' is defined but never used.","'ResidencesService' is defined but never used.","'post' is defined but never used.","'moment' is defined but never used.","'dayjs' is defined but never used.","'client' is defined but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["423"],["424"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["425"],["420"],["421"],"'Resident1Context' is already defined.",["426"],["427"],["428"],["429"],"no-global-assign","no-unsafe-negation",{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"432","fix":"438"},{"desc":"434","fix":"439"},{"desc":"432","fix":"440"},{"desc":"434","fix":"441"},"Update the dependencies array to be: [refetch, skip, take, order, where, options, get, url]",{"range":"442","text":"443"},"Update the dependencies array to be: [form, imagePath]",{"range":"444","text":"445"},"Update the dependencies array to be: [form, obj]",{"range":"446","text":"447"},"Update the dependencies array to be: [refetch, order, where, options, get, url]",{"range":"448","text":"449"},{"range":"450","text":"445"},{"range":"451","text":"447"},{"range":"452","text":"445"},{"range":"453","text":"447"},[2568,2603],"[refetch, skip, take, order, where, options, get, url]",[1975,1986],"[form, imagePath]",[2176,2181],"[form, obj]",[2613,2636],"[refetch, order, where, options, get, url]",[1719,1730],[1920,1925],[1988,1999],[2189,2194]]